import{_ as l,r as p,o,c as D,b as e,a as r,w as c,d as s,e as a}from"./app-122c9ec0.js";const t={},y=a(`<h1 id="4-数组扁平化" tabindex="-1"><a class="header-anchor" href="#4-数组扁平化" aria-hidden="true">#</a> 4. 数组扁平化</h1><p>数组扁平化就是将 <code>[1, [2, [3]]]</code> 这种多层的数组拍平成一层 <code>[1, 2, 3]</code>。使用 <code>Array.prototype.flat</code> 可以直接将多层数组拍平成一层：</p><div class="language-javascript" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, [</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, [</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">]]].</span><span style="color:#DCDCAA;">flat</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)  </span><span style="color:#6A9955;">// [1, 2, 3]</span></span>
<span class="line"></span></code></pre></div><p>ES5 实现：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">flatten</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;"> = [];</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">len</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">len</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">Array</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">isArray</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">])) {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">flatten</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">]))</span></span>
<span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ES6 实现：</p><div class="language-javascript" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">flatten_es6</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">some</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">Array</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">isArray</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">))) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;"> = [].</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div>`,7),C=a(`<div class="language-javascript" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">my_flatten</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">reduce</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">pre</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">cur</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">pre</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Array</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">isArray</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">cur</span><span style="color:#D4D4D4;">) ? </span><span style="color:#DCDCAA;">my_flatten</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">cur</span><span style="color:#D4D4D4;">) : </span><span style="color:#9CDCFE;">cur</span><span style="color:#D4D4D4;">), []);</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div>`,1);function i(d,E){const n=p("Badge");return o(),D("div",null,[y,e("p",null,[r(n,{type:"warning"},{default:c(()=>[s("新增")]),_:1}),s(" 我的更简单实现：")]),C])}const A=l(t,[["render",i],["__file","04-flatten-arrays.html.vue"]]);export{A as default};
