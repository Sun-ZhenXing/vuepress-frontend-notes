import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c as e,b as t,a as r,w as D,e as s,d as a}from"./app-FEcl1joV.js";const c={},y=a(`<h1 id="4-数组扁平化" tabindex="-1"><a class="header-anchor" href="#4-数组扁平化"><span>4. 数组扁平化</span></a></h1><p>数组扁平化就是将 <code>[1, [2, [3]]]</code> 这种多层的数组拍平成一层 <code>[1, 2, 3]</code>。使用 <code>Array.prototype.flat</code> 可以直接将多层数组拍平成一层：</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, [</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, [</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">]]].</span><span style="color:#DCDCAA;">flat</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)  </span><span style="color:#6A9955;">// [1, 2, 3]</span></span>
<span class="line"></span></code></pre></div><p>ES5 实现：</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> flatten</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> result</span><span style="color:#D4D4D4;"> = []</span></span>
<span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">len</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">len</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">Array</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">isArray</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">]))</span></span>
<span class="line"><span style="color:#9CDCFE;">      result</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">flatten</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">]))</span></span>
<span class="line"><span style="color:#C586C0;">    else</span></span>
<span class="line"><span style="color:#9CDCFE;">      result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> result</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>ES6 实现：</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">  while</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">some</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#9CDCFE;"> Array</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">isArray</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">)))</span></span>
<span class="line"><span style="color:#9CDCFE;">    arr</span><span style="color:#D4D4D4;"> = [].</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> arr</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div>`,7),C=a(`<div class="language-javascript" data-ext="js" data-title="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">reduce</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">pre</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">cur</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> pre</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Array</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">isArray</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">cur</span><span style="color:#D4D4D4;">) ? </span><span style="color:#DCDCAA;">my_flatten</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">cur</span><span style="color:#D4D4D4;">) : </span><span style="color:#9CDCFE;">cur</span><span style="color:#D4D4D4;">), [])</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div>`,1);function i(d,E){const n=o("Badge");return p(),e("div",null,[y,t("p",null,[r(n,{style:{"user-select":"none"},type:"warning"},{default:D(()=>[s("新增")]),_:1}),s(" 我的更简单实现：")]),C])}const A=l(c,[["render",i],["__file","04-flatten-arrays.html.vue"]]),h=JSON.parse('{"path":"/notebook/js/handwrite-36/04-flatten-arrays.html","title":"4. 数组扁平化","lang":"zh-CN","frontmatter":{"description":"4. 数组扁平化 数组扁平化就是将 [1, [2, [3]]] 这种多层的数组拍平成一层 [1, 2, 3]。使用 Array.prototype.flat 可以直接将多层数组拍平成一层： ES5 实现： ES6 实现： 我的更简单实现：","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/notebook/js/handwrite-36/04-flatten-arrays.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"4. 数组扁平化"}],["meta",{"property":"og:description","content":"4. 数组扁平化 数组扁平化就是将 [1, [2, [3]]] 这种多层的数组拍平成一层 [1, 2, 3]。使用 Array.prototype.flat 可以直接将多层数组拍平成一层： ES5 实现： ES6 实现： 我的更简单实现："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T11:44:04.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T11:44:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4. 数组扁平化\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T11:44:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[],"git":{"createdTime":1675934802000,"updatedTime":1714823044000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":0.33,"words":99},"filePathRelative":"notebook/js/handwrite-36/04-flatten-arrays.md","localizedDate":"2023年2月9日","autoDesc":true}');export{A as comp,h as data};
