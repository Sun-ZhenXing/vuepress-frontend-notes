import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as e,c as t,b as s,e as n,a as o,d as D}from"./app-FEcl1joV.js";const c={},r=D(`<h1 id="6-事件总线" tabindex="-1"><a class="header-anchor" href="#6-事件总线"><span>6. 事件总线</span></a></h1><p>使用发布订阅模式实现事件总线：</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">class</span><span style="color:#4EC9B0;"> EventEmitter</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">  constructor</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;">    this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;"> = {}</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">  emit</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">once</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">]) {</span></span>
<span class="line"><span style="color:#6A9955;">      // 创建副本，如果回调函数内继续注册相同事件，会造成死循环</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> tasks</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">].</span><span style="color:#DCDCAA;">slice</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#C586C0;">      for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> fn</span><span style="color:#569CD6;"> of</span><span style="color:#9CDCFE;"> tasks</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#DCDCAA;">        fn</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">once</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">        delete</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">  off</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> tasks</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">tasks</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> index</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">tasks</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">findIndex</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">f</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#9CDCFE;"> f</span><span style="color:#D4D4D4;"> === </span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;"> || </span><span style="color:#9CDCFE;">f</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">callback</span><span style="color:#D4D4D4;"> === </span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;"> &gt;= </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">        tasks</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">splice</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">  on</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#569CD6;">      this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">].</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">    else</span></span>
<span class="line"><span style="color:#569CD6;">      this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">] = [</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div>`,3),y={class:"hint-container info"},i=s("p",{class:"hint-container-title"},"事件总线",-1),C={href:"https://www.npmjs.com/package/emittery",target:"_blank",rel:"noopener noreferrer"},m=s("code",null,"emittery",-1),d={href:"https://www.npmjs.com/package/event-emitter",target:"_blank",rel:"noopener noreferrer"},h=s("code",null,"event-emitter",-1),E={href:"https://www.npmjs.com/package/mitt",target:"_blank",rel:"noopener noreferrer"},F=s("code",null,"mitt",-1);function f(_,u){const a=p("ExternalLinkIcon");return e(),t("div",null,[r,s("div",y,[i,s("p",null,[n("实现事件总线第三方库有 "),s("a",C,[m,o(a)]),n("、"),s("a",d,[h,o(a)]),n(" 和 "),s("a",E,[F,o(a)]),n("。")])])])}const v=l(c,[["render",f],["__file","06-event-bus.html.vue"]]),A=JSON.parse('{"path":"/notebook/js/handwrite-36/06-event-bus.html","title":"6. 事件总线","lang":"zh-CN","frontmatter":{"description":"6. 事件总线 使用发布订阅模式实现事件总线： 事件总线 实现事件总线第三方库有 emittery、event-emitter 和 mitt。","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/notebook/js/handwrite-36/06-event-bus.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"6. 事件总线"}],["meta",{"property":"og:description","content":"6. 事件总线 使用发布订阅模式实现事件总线： 事件总线 实现事件总线第三方库有 emittery、event-emitter 和 mitt。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T11:44:04.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T11:44:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"6. 事件总线\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T11:44:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[],"git":{"createdTime":1675939447000,"updatedTime":1714823044000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":0.18,"words":55},"filePathRelative":"notebook/js/handwrite-36/06-event-bus.md","localizedDate":"2023年2月9日","autoDesc":true}');export{v as comp,A as data};
