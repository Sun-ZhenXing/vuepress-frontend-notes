import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,d as p}from"./app-FEcl1joV.js";const l={},o=p(`<h1 id="7-解析-url-参数" tabindex="-1"><a class="header-anchor" href="#7-解析-url-参数"><span>7. 解析 URL 参数</span></a></h1><p>解析 URL 中的参数列表。</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;"> */</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> function</span><span style="color:#DCDCAA;"> parseParam</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> paramsStr</span><span style="color:#D4D4D4;"> =</span><span style="color:#D16969;"> /.</span><span style="color:#D7BA7D;">+\\?</span><span style="color:#CE9178;">(</span><span style="color:#D16969;">.</span><span style="color:#D7BA7D;">+</span><span style="color:#CE9178;">)</span><span style="color:#DCDCAA;">$</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">exec</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">)[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">] </span><span style="color:#6A9955;">// 将 ? 后面的字符串取出来</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> paramsArr</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">paramsStr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">split</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&amp;&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// 将字符串以 &amp; 分割后存到数组中</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> paramsObj</span><span style="color:#D4D4D4;"> = {}</span></span>
<span class="line"><span style="color:#6A9955;">  // 将 params 存到对象中</span></span>
<span class="line"><span style="color:#9CDCFE;">  paramsArr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">forEach</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#D16969;">/=/</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">test</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;">)) { </span><span style="color:#6A9955;">// 处理有 value 的参数</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#D4D4D4;"> [</span><span style="color:#4FC1FF;">key</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">val_encoded</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">split</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;=&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// 分割 key 和 value</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> val_decoded</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">decodeURIComponent</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">val_encoded</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// 解码</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> val</span><span style="color:#D4D4D4;"> =</span><span style="color:#D16969;"> /</span><span style="color:#DCDCAA;">^</span><span style="color:#D16969;">\\d</span><span style="color:#D7BA7D;">+</span><span style="color:#DCDCAA;">$</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">test</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">val_decoded</span><span style="color:#D4D4D4;">) ? </span><span style="color:#9CDCFE;">Number</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">parseFloat</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">val_decoded</span><span style="color:#D4D4D4;">) : </span><span style="color:#9CDCFE;">val_decoded</span><span style="color:#6A9955;"> // 判断是否转为数字</span></span>
<span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">paramsObj</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">hasOwnProperty</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">)) { </span><span style="color:#6A9955;">// 如果对象有 key，则添加一个值</span></span>
<span class="line"><span style="color:#9CDCFE;">        paramsObj</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">].</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"><span style="color:#C586C0;">      else</span><span style="color:#D4D4D4;"> { </span><span style="color:#6A9955;">// 如果对象没有这个 key，创建 key 并设置值</span></span>
<span class="line"><span style="color:#9CDCFE;">        paramsObj</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">val</span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    else</span><span style="color:#D4D4D4;"> { </span><span style="color:#6A9955;">// 处理没有 value 的参数</span></span>
<span class="line"><span style="color:#9CDCFE;">      paramsObj</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;">] = </span><span style="color:#569CD6;">true</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br></div></div><p>修改了原文的代码，转换为更简单的移入操作，并全部使用 <code>const</code> 定义变量。</p><div class="language-diff" data-ext="diff" data-title="diff"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#B5CEA8;">+ paramsObj[key].push(val);</span></span>
<span class="line"><span style="color:#CE9178;">- paramsObj[key] = [].concat(paramsObj[key], val);</span></span>
<span class="line"></span></code></pre></div>`,5),e=[o];function t(r,c){return a(),n("div",null,e)}const C=s(l,[["render",t],["__file","07-parse-url-param.html.vue"]]),i=JSON.parse('{"path":"/notebook/js/handwrite-36/07-parse-url-param.html","title":"7. 解析 URL 参数","lang":"zh-CN","frontmatter":{"description":"7. 解析 URL 参数 解析 URL 中的参数列表。 修改了原文的代码，转换为更简单的移入操作，并全部使用 const 定义变量。","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/notebook/js/handwrite-36/07-parse-url-param.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"7. 解析 URL 参数"}],["meta",{"property":"og:description","content":"7. 解析 URL 参数 解析 URL 中的参数列表。 修改了原文的代码，转换为更简单的移入操作，并全部使用 const 定义变量。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T11:44:04.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T11:44:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7. 解析 URL 参数\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T11:44:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[],"git":{"createdTime":1675939447000,"updatedTime":1714823044000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":0.22,"words":65},"filePathRelative":"notebook/js/handwrite-36/07-parse-url-param.md","localizedDate":"2023年2月9日","autoDesc":true}');export{C as comp,i as data};
