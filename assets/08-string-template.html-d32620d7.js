import{_ as s,o as n,c as a,e as l}from"./app-122c9ec0.js";const p={},o=l(`<h1 id="8-字符串模板" tabindex="-1"><a class="header-anchor" href="#8-字符串模板" aria-hidden="true">#</a> 8. 字符串模板</h1><p>使用 <code>{{name}}</code> 格式作为字符串模板。</p><div class="language-javascript" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">reg</span><span style="color:#D4D4D4;"> =</span><span style="color:#D16969;"> /</span><span style="color:#D7BA7D;">\\{\\{</span><span style="color:#CE9178;">(</span><span style="color:#D16969;">\\w</span><span style="color:#D7BA7D;">+</span><span style="color:#CE9178;">)</span><span style="color:#D7BA7D;">\\}\\}</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">; </span><span style="color:#6A9955;">// 模板字符串正则</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">reg</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">test</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;">)) { </span><span style="color:#6A9955;">// 判断模板里是否有模板字符串</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">reg</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">exec</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;">)[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]; </span><span style="color:#6A9955;">// 查找当前模板里第一个模板字符串的字段</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">replace</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">reg</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">]); </span><span style="color:#6A9955;">// 将第一个模板字符串渲染</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// 递归的渲染并返回渲染后的结构</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;">; </span><span style="color:#6A9955;">// 如果模板没有模板字符串直接返回</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><p>测试代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">test</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">template</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;我是 {{name}}，年龄 {{age}}，性别 {{sex}}&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">person</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">name:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Alex&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">age:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">12</span></span>
<span class="line"><span style="color:#D4D4D4;">  };</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">)); </span><span style="color:#6A9955;">// 我是 Alex，年龄 12，性别 undefined</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">test</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),e=[o];function D(c,t){return n(),a("div",null,e)}const y=s(p,[["render",D],["__file","08-string-template.html.vue"]]);export{y as default};
