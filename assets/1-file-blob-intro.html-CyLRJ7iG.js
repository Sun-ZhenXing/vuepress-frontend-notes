import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as r,b as n,a as e,e as a,d as t}from"./app-C-lF8Tfs.js";const i={},d=n("h1",{id:"1-file-和-blob-简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#1-file-和-blob-简介"},[n("span",null,"1. File 和 Blob 简介")])],-1),u=n("h2",{id:"11-blob-对象",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#11-blob-对象"},[n("span",null,"1.1 Blob 对象")])],-1),k={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"Blob",-1),h={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"ReadableStream",-1),_=n("sup",{class:"footnote-ref"},[n("a",{href:"#footnote1"},"[1]"),n("a",{class:"footnote-anchor",id:"footnote-ref1"})],-1),m=t(`<p><code>Blob</code> 更通俗的解释是大二进制对象。创建 <code>Blob</code> 对象的代码如下：</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Hello, world!&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>创建文件对象的代码如下，区别是文件必须要指定文件名称，而文件对象并不一定代表文件系统上的一个文件，它只是一个表示：</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Hello, world!&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;hello.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,4),g={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/File",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"File",-1),B=n("code",null,"Blob",-1),y=n("p",null,[n("code",null,"File"),a(" 类型继承于 "),n("code",null,"Blob"),a(" 类型：")],-1),w=n("p",null,[a("所以 "),n("code",null,"Blob"),a(" 的方法在 "),n("code",null,"File"),a(" 中都存在。")],-1),j=n("code",null,"Blob",-1),F={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"ArrayBuffer",-1),A=t(`<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arrayBuffer <span class="token operator">=</span> <span class="token keyword">await</span> blob<span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="12-filereader-对象" tabindex="-1"><a class="header-anchor" href="#12-filereader-对象"><span>1.2 FileReader 对象</span></a></h2>`,2),z={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"FileReader",-1),R=n("code",null,"onload",-1),V=n("code",null,"FileReader",-1),S=t(`<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fileReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fileReader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fileReader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// ArrayBuffer(13)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// ArrayBuffer(13)</span>
<span class="token punctuation">}</span>
fileReader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>我们调试后可以看到，<code>fileReader.result</code> 和 <code>event.target.result</code> 值是一样的。</p><h2 id="13-dateview-对象" tabindex="-1"><a class="header-anchor" href="#13-dateview-对象"><span>1.3 DateView 对象</span></a></h2>`,3),I={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",target:"_blank",rel:"noopener noreferrer"},C=n("code",null,"DataView",-1),D=n("code",null,"ArrayBuffer",-1),T=t(`<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arrayBuffer <span class="token operator">=</span> <span class="token keyword">await</span> blob<span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dataView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataView</span><span class="token punctuation">(</span>arrayBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataView<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataView<span class="token punctuation">.</span><span class="token function">getUint8</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 72</span>
dataView<span class="token punctuation">.</span><span class="token function">setUint8</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><code>DataView</code> 对象有很多 <code>set</code> 或者 <code>get</code> 开头的方法，用于获取指定位置或修改指定位置的数据。</p><hr class="footnotes-sep">`,3),W={class:"footnotes"},J={class:"footnotes-list"},P={id:"footnote1",class:"footnote-item"},U={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob",target:"_blank",rel:"noopener noreferrer"},L=n("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1);function M(O,Z){const s=o("ExternalLinkIcon"),l=o("Mermaid");return c(),r("div",null,[d,u,n("p",null,[n("a",k,[f,e(s)]),a(" 对象表示一个不可变、原始数据的类文件对象。它的数据可以按文本或二进制的格式进行读取，也可以转换成 "),n("a",h,[b,e(s)]),a(" 来用于数据操作。"),_]),m,n("p",null,[n("a",g,[v,e(s)]),a(" 在 Node 端不可用，Node 端有自己的 FS 实现，而 Node 端可以使用 "),B,a("。")]),y,e(l,{id:"mermaid-23",code:"eJxLL0osyFAI8uFSAAJHjWgl/6Ss1OQSpVhNsIgTUMQpJz8JxncG8t0yc1LhfAVdXTsFJzDpyAUA5vURfA=="}),w,n("p",null,[j,a(" 可以获取 "),n("a",F,[x,e(s)]),a(" 对象：")]),A,n("p",null,[a("文件还有一个特殊的工具 "),n("a",z,[N,e(s)]),a(" 用于读取文件，当一个读取事件结束时，它会调用 "),R,a(" 函数来传递参数。"),V,a(" 同样在 Node 端不可用。")]),S,n("p",null,[n("a",I,[C,e(s)]),a(" 对象用于查看或修改 "),D,a(" 对象的内容。")]),T,n("section",W,[n("ol",J,[n("li",P,[n("p",null,[a("MDN，"),n("a",U,[a("https://developer.mozilla.org/zh-CN/docs/Web/API/Blob"),e(s)]),a(),L])])])])])}const H=p(i,[["render",M],["__file","1-file-blob-intro.html.vue"]]),q=JSON.parse('{"path":"/notebook/js/file-and-blob/1-file-blob-intro.html","title":"1. File 和 Blob 简介","lang":"zh-CN","frontmatter":{"description":"1. File 和 Blob 简介 1.1 Blob 对象 Blob 对象表示一个不可变、原始数据的类文件对象。它的数据可以按文本或二进制的格式进行读取，也可以转换成 ReadableStream 来用于数据操作。[1] Blob 更通俗的解释是大二进制对象。创建 Blob 对象的代码如下： 创建文件对象的代码如下，区别是文件必须要指定文件名称，而文件...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/notebook/js/file-and-blob/1-file-blob-intro.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"1. File 和 Blob 简介"}],["meta",{"property":"og:description","content":"1. File 和 Blob 简介 1.1 Blob 对象 Blob 对象表示一个不可变、原始数据的类文件对象。它的数据可以按文本或二进制的格式进行读取，也可以转换成 ReadableStream 来用于数据操作。[1] Blob 更通俗的解释是大二进制对象。创建 Blob 对象的代码如下： 创建文件对象的代码如下，区别是文件必须要指定文件名称，而文件..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T11:44:04.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T11:44:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1. File 和 Blob 简介\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T11:44:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1.1 Blob 对象","slug":"11-blob-对象","link":"#11-blob-对象","children":[]},{"level":2,"title":"1.2 FileReader 对象","slug":"12-filereader-对象","link":"#12-filereader-对象","children":[]},{"level":2,"title":"1.3 DateView 对象","slug":"13-dateview-对象","link":"#13-dateview-对象","children":[]}],"git":{"createdTime":1679388444000,"updatedTime":1714823044000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":1.37,"words":412},"filePathRelative":"notebook/js/file-and-blob/1-file-blob-intro.md","localizedDate":"2023年3月21日","autoDesc":true}');export{H as comp,q as data};
