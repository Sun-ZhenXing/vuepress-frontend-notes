import{_ as c,r as t,o as l,c as r,b as n,a as s,d as a,e as o}from"./app-78780c47.js";const i={},u=n("h1",{id:"_1-file-和-blob-简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-file-和-blob-简介","aria-hidden":"true"},"#"),a(" 1. File 和 Blob 简介")],-1),d=n("h2",{id:"_1-1-blob-对象",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1-blob-对象","aria-hidden":"true"},"#"),a(" 1.1 Blob 对象")],-1),k={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"Blob",-1),f={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"ReadableStream",-1),b=n("sup",{class:"footnote-ref"},[n("a",{href:"#footnote1"},"[1]"),n("a",{class:"footnote-anchor",id:"footnote-ref1"})],-1),g=o(`<p><code>Blob</code> 更通俗的解释是大二进制对象。创建 <code>Blob</code> 对象的代码如下：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Hello, world!&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>创建文件对象的代码如下，区别是文件必须要指定文件名称，而文件对象并不一定代表文件系统上的一个文件，它只是一个表示：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Hello, world!&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;hello.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,4),v={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/File",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"File",-1),w=n("code",null,"Blob",-1),B=n("p",null,[n("code",null,"File"),a(" 类型继承于 "),n("code",null,"Blob"),a(" 类型：")],-1),y=n("p",null,[a("所以 "),n("code",null,"Blob"),a(" 的方法在 "),n("code",null,"File"),a(" 中都存在。")],-1),A=n("code",null,"Blob",-1),j={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"ArrayBuffer",-1),z=o(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arrayBuffer <span class="token operator">=</span> <span class="token keyword">await</span> blob<span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="_1-2-filereader-对象" tabindex="-1"><a class="header-anchor" href="#_1-2-filereader-对象" aria-hidden="true">#</a> 1.2 FileReader 对象</h2>`,2),N={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"FileReader",-1),R=n("code",null,"onload",-1),V=n("code",null,"FileReader",-1),I=o(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fileReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fileReader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fileReader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// ArrayBuffer(13)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// ArrayBuffer(13)</span>
<span class="token punctuation">}</span>
fileReader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>我们调试后可以看到，<code>fileReader.result</code> 和 <code>event.target.result</code> 值是一样的。</p><h2 id="_1-3-dateview-对象" tabindex="-1"><a class="header-anchor" href="#_1-3-dateview-对象" aria-hidden="true">#</a> 1.3 DateView 对象</h2>`,3),S={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",target:"_blank",rel:"noopener noreferrer"},W=n("code",null,"DataView",-1),C=n("code",null,"ArrayBuffer",-1),D=o(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arrayBuffer <span class="token operator">=</span> <span class="token keyword">await</span> blob<span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dataView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataView</span><span class="token punctuation">(</span>arrayBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataView<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataView<span class="token punctuation">.</span><span class="token function">getUint8</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 72</span>
dataView<span class="token punctuation">.</span><span class="token function">setUint8</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><code>DataView</code> 对象有很多 <code>set</code> 或者 <code>get</code> 开头的方法，用于获取指定位置或修改指定位置的数据。</p><hr class="footnotes-sep">`,3),J={class:"footnotes"},P={class:"footnotes-list"},U={id:"footnote1",class:"footnote-item"},L={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob",target:"_blank",rel:"noopener noreferrer"},M=n("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1);function E(G,H){const e=t("ExternalLinkIcon"),p=t("Mermaid");return l(),r("div",null,[u,d,n("p",null,[n("a",k,[_,s(e)]),a(" 对象表示一个不可变、原始数据的类文件对象。它的数据可以按文本或二进制的格式进行读取，也可以转换成 "),n("a",f,[h,s(e)]),a(" 来用于数据操作。"),b]),g,n("p",null,[n("a",v,[m,s(e)]),a(" 在 Node 端不可用，Node 端有自己的 FS 实现，而 Node 端可以使用 "),w,a("。")]),B,s(p,{id:"mermaid-23",code:"eJxLL0osyFAI8uFSAAJHjWgl/6Ss1OQSpVhNsIgTUMQpJz8JxncG8t0yc1LhfAVdXTsFJzDpyAUA5vURfA=="}),y,n("p",null,[A,a(" 可以获取 "),n("a",j,[x,s(e)]),a(" 对象：")]),z,n("p",null,[a("文件还有一个特殊的工具 "),n("a",N,[F,s(e)]),a(" 用于读取文件，当一个读取事件结束时，它会调用 "),R,a(" 函数来传递参数。"),V,a(" 同样在 Node 端不可用。")]),I,n("p",null,[n("a",S,[W,s(e)]),a(" 对象用于查看或修改 "),C,a(" 对象的内容。")]),D,n("section",J,[n("ol",P,[n("li",U,[n("p",null,[a("MDN，"),n("a",L,[a("https://developer.mozilla.org/zh-CN/docs/Web/API/Blob"),s(e)]),a(),M])])])])])}const T=c(i,[["render",E],["__file","1-file-blob-intro.html.vue"]]);export{T as default};
