import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as l,c as o,b as s,e as n,d as p}from"./app-FEcl1joV.js";const e={},t=s("h1",{id:"11-函数节流",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#11-函数节流"},[s("span",null,"11. 函数节流")])],-1),D=s("p",null,[n("触发高频事件，且 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"N")]),s("annotation",{encoding:"application/x-tex"},"N")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])])]),n(" 秒内只执行一次。")],-1),c=s("h2",{id:"111-简单版",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#111-简单版"},[s("span",null,"11.1 简单版")])],-1),r=s("ol",null,[s("li",null,[s("p",null,[n("使用时间戳来实现，立即执行一次，此后的 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"N")]),s("annotation",{encoding:"application/x-tex"},"N")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])])]),n(" 秒不执行。")]),s("div",{class:"language-javascript","data-ext":"js","data-title":"js"},[s("pre",{class:"shiki dark-plus",style:{"background-color":"#1E1E1E",color:"#D4D4D4"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}}," * @"),s("span",{style:{color:"#9CDCFE"}},"param"),s("span",{style:{color:"#D4D4D4"}}," {"),s("span",{style:{color:"#9CDCFE"}},"number"),s("span",{style:{color:"#D4D4D4"}},"} "),s("span",{style:{color:"#9CDCFE"}},"wait")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}}," */")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"export"),s("span",{style:{color:"#569CD6"}}," function"),s("span",{style:{color:"#DCDCAA"}}," throttle"),s("span",{style:{color:"#D4D4D4"}},"("),s("span",{style:{color:"#9CDCFE"}},"func"),s("span",{style:{color:"#D4D4D4"}},", "),s("span",{style:{color:"#9CDCFE"}},"wait"),s("span",{style:{color:"#D4D4D4"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"  let"),s("span",{style:{color:"#9CDCFE"}}," previous"),s("span",{style:{color:"#D4D4D4"}}," = "),s("span",{style:{color:"#B5CEA8"}},"0")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"  return"),s("span",{style:{color:"#569CD6"}}," function"),s("span",{style:{color:"#D4D4D4"}}," () {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"    const"),s("span",{style:{color:"#4FC1FF"}}," now"),s("span",{style:{color:"#D4D4D4"}}," = "),s("span",{style:{color:"#569CD6"}},"new"),s("span",{style:{color:"#DCDCAA"}}," Date"),s("span",{style:{color:"#D4D4D4"}},"()."),s("span",{style:{color:"#DCDCAA"}},"getTime"),s("span",{style:{color:"#D4D4D4"}},"()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"    const"),s("span",{style:{color:"#4FC1FF"}}," context"),s("span",{style:{color:"#D4D4D4"}}," = "),s("span",{style:{color:"#569CD6"}},"this")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"    const"),s("span",{style:{color:"#4FC1FF"}}," args"),s("span",{style:{color:"#D4D4D4"}}," = "),s("span",{style:{color:"#569CD6"}},"arguments")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C586C0"}},"    if"),s("span",{style:{color:"#D4D4D4"}}," ("),s("span",{style:{color:"#9CDCFE"}},"now"),s("span",{style:{color:"#D4D4D4"}}," - "),s("span",{style:{color:"#9CDCFE"}},"previous"),s("span",{style:{color:"#D4D4D4"}}," > "),s("span",{style:{color:"#9CDCFE"}},"wait"),s("span",{style:{color:"#D4D4D4"}},") {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#9CDCFE"}},"      func"),s("span",{style:{color:"#D4D4D4"}},"."),s("span",{style:{color:"#DCDCAA"}},"apply"),s("span",{style:{color:"#D4D4D4"}},"("),s("span",{style:{color:"#9CDCFE"}},"context"),s("span",{style:{color:"#D4D4D4"}},", "),s("span",{style:{color:"#9CDCFE"}},"args"),s("span",{style:{color:"#D4D4D4"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#9CDCFE"}},"      previous"),s("span",{style:{color:"#D4D4D4"}}," = "),s("span",{style:{color:"#9CDCFE"}},"now")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"  }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D4D4D4"}},"}")]),n(`
`),s("span",{class:"line"})])])])]),s("li",null,[s("p",null,[n("使用 "),s("code",null,"setTimeout"),n(" 来实现，每隔 "),s("code",null,"delay"),n("秒执行一次")]),s("p",null,"@[code js](./src/11-throttle-2.js")])],-1),y=p(`<h2 id="112-最" tabindex="-1"><a class="header-anchor" href="#112-最"><span>11.2 最</span></a></h2><ul><li>支持取消节流<br> ptioptio ，默认是 <code>true</code><ul><li><code>opitons.trailing</code> 表示结束调用的时候是否还要执行一次，默认都是 <code>false</code></li></ul></li></ul><p>注意同时将 <code>leading</code> 和 <code>trailing</code> 设置为 <code>false</code> 时不能发生任何事情。</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;"> * @</span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;"> {{</span><span style="color:#9CDCFE;">leading</span><span style="color:#D4D4D4;">?: </span><span style="color:#9CDCFE;">boolean</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">trailing</span><span style="color:#D4D4D4;">?: </span><span style="color:#9CDCFE;">boolean</span><span style="color:#D4D4D4;">}?} </span><span style="color:#9CDCFE;">options</span></span>
<span class="line"><span style="color:#D4D4D4;"> */</span></span>
<span class="line"><span style="color:#9CDCFE;">export</span><span style="color:#569CD6;"> function</span><span style="color:#DCDCAA;"> throttle</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">func</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">wait</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> timeout</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">args</span></span>
<span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> previous</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (!</span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">    options</span><span style="color:#D4D4D4;"> = {}</span></span>
<span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (!</span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">leading</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">    options</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">leading</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#DCDCAA;"> later</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> () {</span></span>
<span class="line"><span style="color:#9CDCFE;">    previous</span><span style="color:#D4D4D4;"> = !</span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">leading</span><span style="color:#D4D4D4;"> ? </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;"> : </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Date</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">getTime</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">    timeout</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">null</span></span>
<span class="line"><span style="color:#9CDCFE;">    func</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">apply</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (!</span><span style="color:#9CDCFE;">timeout</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">      context</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">null</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#DCDCAA;"> throttled</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> () {</span></span>
<span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> now</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Date</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">getTime</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (!</span><span style="color:#9CDCFE;">previous</span><span style="color:#D4D4D4;"> &amp;&amp; !</span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">leading</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">      previous</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">now</span></span>
<span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> remaining</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">wait</span><span style="color:#D4D4D4;"> - (</span><span style="color:#9CDCFE;">now</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">previous</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">    context</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">this</span></span>
<span class="line"><span style="color:#9CDCFE;">    args</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">arguments</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">remaining</span><span style="color:#D4D4D4;"> &lt;= </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;"> || </span><span style="color:#9CDCFE;">remaining</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#9CDCFE;">wait</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">timeout</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#DCDCAA;">        clearTimeout</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">timeout</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">        timeout</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">null</span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"><span style="color:#9CDCFE;">      previous</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">now</span></span>
<span class="line"><span style="color:#9CDCFE;">      func</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">apply</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (!</span><span style="color:#9CDCFE;">timeout</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">        context</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">null</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    else</span><span style="color:#C586C0;"> if</span><span style="color:#D4D4D4;"> (!</span><span style="color:#9CDCFE;">timeout</span><span style="color:#D4D4D4;"> &amp;&amp; </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">trailing</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">      timeout</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">later</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">remaining</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">  throttled</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">cancel</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> () {</span></span>
<span class="line"><span style="color:#DCDCAA;">    clearTimeout</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">timeout</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">    previous</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#9CDCFE;">    timeout</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">null</span></span>
<span class="line"></span></code></pre></div>`,4),i=[t,D,c,r,y];function C(u,d){return l(),o("div",null,i)}const E=a(e,[["render",C],["__file","11-throttle.html.vue"]]),h=JSON.parse('{"path":"/notebook/js/handwrite-36/11-throttle.html","title":"11. 函数节流","lang":"zh-CN","frontmatter":{"description":"11. 函数节流 触发高频事件，且 N 秒内只执行一次。 11.1 简单版 使用时间戳来实现，立即执行一次，此后的 N 秒不执行。 使用 setTimeout 来实现，每隔 delay秒执行一次 @[code js](./src/11-throttle-2.js 11.2 最 支持取消节流 ptioptio ，默认是 true opitons.trai...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/notebook/js/handwrite-36/11-throttle.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"11. 函数节流"}],["meta",{"property":"og:description","content":"11. 函数节流 触发高频事件，且 N 秒内只执行一次。 11.1 简单版 使用时间戳来实现，立即执行一次，此后的 N 秒不执行。 使用 setTimeout 来实现，每隔 delay秒执行一次 @[code js](./src/11-throttle-2.js 11.2 最 支持取消节流 ptioptio ，默认是 true opitons.trai..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T12:03:18.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T12:03:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11. 函数节流\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T12:03:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"11.1 简单版","slug":"111-简单版","link":"#111-简单版","children":[]},{"level":2,"title":"11.2 最","slug":"112-最","link":"#112-最","children":[]}],"git":{"createdTime":1675939447000,"updatedTime":1714824198000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":2}]},"readingTime":{"minutes":0.47,"words":141},"filePathRelative":"notebook/js/handwrite-36/11-throttle.md","localizedDate":"2023年2月9日","autoDesc":true}');export{E as comp,h as data};
