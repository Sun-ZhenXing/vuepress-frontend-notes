import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as e,b as n,e as s,d as o}from"./app-BdnEjZx0.js";const p={},c=n("h1",{id:"11-函数节流",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#11-函数节流"},[n("span",null,"11. 函数节流")])],-1),l=n("p",null,[s("触发高频事件，且 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"N")]),n("annotation",{encoding:"application/x-tex"},"N")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])])]),s(" 秒内只执行一次。")],-1),i=n("h2",{id:"111-简单版",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#111-简单版"},[n("span",null,"11.1 简单版")])],-1),u=n("ol",null,[n("li",null,[n("p",null,[s("使用时间戳来实现，立即执行一次，此后的 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"N")]),n("annotation",{encoding:"application/x-tex"},"N")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])])]),s(" 秒不执行。")]),n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[s(),n("span",{class:"token operator"},"*"),s(" @param "),n("span",{class:"token punctuation"},"{"),s("number"),n("span",{class:"token punctuation"},"}"),s(` wait
 `),n("span",{class:"token operator"},"*"),n("span",{class:"token operator"},"/"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"throttle"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("func"),n("span",{class:"token punctuation"},","),s(" wait")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"let"),s(" previous "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" now "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Date"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getTime"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" context "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" args "),n("span",{class:"token operator"},"="),s(` arguments
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("now "),n("span",{class:"token operator"},"-"),s(" previous "),n("span",{class:"token operator"},">"),s(" wait"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token function"},"func"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"apply"),n("span",{class:"token punctuation"},"("),s("context"),n("span",{class:"token punctuation"},","),s(" args"),n("span",{class:"token punctuation"},")"),s(`
      previous `),n("span",{class:"token operator"},"="),s(` now
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])])]),n("li",null,[n("p",null,[s("使用 "),n("code",null,"setTimeout"),s(" 来实现，每隔 "),n("code",null,"delay"),s("秒执行一次")]),n("p",null,"@[code js](./src/11-throttle-2.js")])],-1),r=o(`<h2 id="112-最" tabindex="-1"><a class="header-anchor" href="#112-最"><span>11.2 最</span></a></h2><ul><li>支持取消节流<br> ptioptio ，默认是 <code>true</code><ul><li><code>opitons.trailing</code> 表示结束调用的时候是否还要执行一次，默认都是 <code>false</code></li></ul></li></ul><p>注意同时将 <code>leading</code> 和 <code>trailing</code> 设置为 <code>false</code> 时不能发生任何事情。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code> <span class="token operator">*</span> @param <span class="token punctuation">{</span><span class="token punctuation">{</span>leading<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span> trailing<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">}</span><span class="token operator">?</span><span class="token punctuation">}</span> options
 <span class="token operator">*</span><span class="token operator">/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> timeout<span class="token punctuation">,</span> context<span class="token punctuation">,</span> args
  <span class="token keyword">let</span> previous <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">)</span>
    options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">.</span>leading<span class="token punctuation">)</span>
    options<span class="token punctuation">.</span>leading <span class="token operator">=</span> <span class="token boolean">true</span>

  <span class="token keyword">const</span> <span class="token function-variable function">later</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    previous <span class="token operator">=</span> <span class="token operator">!</span>options<span class="token punctuation">.</span>leading <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    timeout <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timeout<span class="token punctuation">)</span>
      context <span class="token operator">=</span> args <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">throttled</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>previous <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>options<span class="token punctuation">.</span>leading<span class="token punctuation">)</span>
      previous <span class="token operator">=</span> now
    <span class="token keyword">const</span> remaining <span class="token operator">=</span> wait <span class="token operator">-</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> previous<span class="token punctuation">)</span>
    context <span class="token operator">=</span> <span class="token keyword">this</span>
    args <span class="token operator">=</span> arguments
    <span class="token keyword">if</span> <span class="token punctuation">(</span>remaining <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> remaining <span class="token operator">&gt;</span> wait<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>
        timeout <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span>
      previous <span class="token operator">=</span> now
      <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timeout<span class="token punctuation">)</span>
        context <span class="token operator">=</span> args <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timeout <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>trailing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>later<span class="token punctuation">,</span> remaining<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  throttled<span class="token punctuation">.</span><span class="token function-variable function">cancel</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>
    previous <span class="token operator">=</span> <span class="token number">0</span>
    timeout <span class="token operator">=</span> <span class="token keyword">null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),k=[c,l,i,u,r];function d(m,v){return t(),e("div",null,k)}const w=a(p,[["render",d],["__file","11-throttle.html.vue"]]),g=JSON.parse('{"path":"/notebook/js/handwrite-36/11-throttle.html","title":"11. 函数节流","lang":"zh-CN","frontmatter":{"description":"11. 函数节流 触发高频事件，且 N 秒内只执行一次。 11.1 简单版 使用时间戳来实现，立即执行一次，此后的 N 秒不执行。 使用 setTimeout 来实现，每隔 delay秒执行一次 @[code js](./src/11-throttle-2.js 11.2 最 支持取消节流 ptioptio ，默认是 true opitons.trai...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/notebook/js/handwrite-36/11-throttle.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"11. 函数节流"}],["meta",{"property":"og:description","content":"11. 函数节流 触发高频事件，且 N 秒内只执行一次。 11.1 简单版 使用时间戳来实现，立即执行一次，此后的 N 秒不执行。 使用 setTimeout 来实现，每隔 delay秒执行一次 @[code js](./src/11-throttle-2.js 11.2 最 支持取消节流 ptioptio ，默认是 true opitons.trai..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T12:03:18.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T12:03:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11. 函数节流\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T12:03:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"11.1 简单版","slug":"111-简单版","link":"#111-简单版","children":[]},{"level":2,"title":"11.2 最","slug":"112-最","link":"#112-最","children":[]}],"git":{"createdTime":1675939447000,"updatedTime":1714824198000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":2}]},"readingTime":{"minutes":0.47,"words":141},"filePathRelative":"notebook/js/handwrite-36/11-throttle.md","localizedDate":"2023年2月9日","autoDesc":true}');export{w as comp,g as data};
