import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-BdnEjZx0.js";const e={},p=t(`<h1 id="16259-to-primitive" tabindex="-1"><a class="header-anchor" href="#16259-to-primitive"><span>16259. To Primitive</span></a></h1><p>&lt;题目描述&gt;</p><p>::: playground#ts 16259. To Primitive</p><p>@file index.ts</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// ============= Test Cases =============</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> Equal<span class="token punctuation">,</span> Expect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@type-challenges/utils&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">PersonInfo</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span>
  age<span class="token operator">:</span> <span class="token number">30</span>
  married<span class="token operator">:</span> <span class="token boolean">false</span>
  addr<span class="token operator">:</span> <span class="token punctuation">{</span>
    home<span class="token operator">:</span> <span class="token string">&#39;123456&#39;</span>
    phone<span class="token operator">:</span> <span class="token string">&#39;13111111111&#39;</span>
  <span class="token punctuation">}</span>
  hobbies<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;sing&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dance&#39;</span><span class="token punctuation">]</span>
  readonlyArr<span class="token operator">:</span> <span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">]</span>
  <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">ExpectedResult</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span>
  married<span class="token operator">:</span> <span class="token builtin">boolean</span>
  addr<span class="token operator">:</span> <span class="token punctuation">{</span>
    home<span class="token operator">:</span> <span class="token builtin">string</span>
    phone<span class="token operator">:</span> <span class="token builtin">string</span>
  <span class="token punctuation">}</span>
  hobbies<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">]</span>
  readonlyArr<span class="token operator">:</span> <span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>
  fn<span class="token operator">:</span> <span class="token builtin">Function</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">cases</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  Expect<span class="token operator">&lt;</span>Equal<span class="token operator">&lt;</span>ToPrimitive<span class="token operator">&lt;</span>PersonInfo<span class="token operator">&gt;</span><span class="token punctuation">,</span> ExpectedResult<span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token comment">// ============= Your Code Here =============</span>
<span class="token keyword">type</span> <span class="token class-name">ToPrimitive<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token builtin">any</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><details class="hint-container details"><summary>点击查看答案</summary><div class="language-typescript" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ToPrimitive<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">object</span> <span class="token operator">?</span> <span class="token punctuation">(</span>
  <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">unknown</span> <span class="token operator">?</span> <span class="token builtin">Function</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>Key <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> ToPrimitive<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span>Key<span class="token punctuation">]</span><span class="token operator">&gt;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
  <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> <span class="token function-variable function">valueOf</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">P</span> <span class="token punctuation">}</span> <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> <span class="token constant">T</span>
<span class="token punctuation">)</span>
</code></pre></div></details>`,7),o=[p];function i(c,l){return s(),a("div",null,o)}const k=n(e,[["render",i],["__file","16259-to-primitive.html.vue"]]),d=JSON.parse('{"path":"/notebook/typescript/type-challenges/16259-to-primitive.html","title":"16259. To Primitive","lang":"zh-CN","frontmatter":{"description":"16259. To Primitive <题目描述> ::: playground#ts 16259. To Primitive @file index.ts ::: 点击查看答案","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/notebook/typescript/type-challenges/16259-to-primitive.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"16259. To Primitive"}],["meta",{"property":"og:description","content":"16259. To Primitive <题目描述> ::: playground#ts 16259. To Primitive @file index.ts ::: 点击查看答案"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T11:44:04.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T11:44:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"16259. To Primitive\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T11:44:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[],"git":{"createdTime":1685259723000,"updatedTime":1714823044000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":0.39,"words":116},"filePathRelative":"notebook/typescript/type-challenges/16259-to-primitive.md","localizedDate":"2023年5月28日","autoDesc":true}');export{k as comp,d as data};
