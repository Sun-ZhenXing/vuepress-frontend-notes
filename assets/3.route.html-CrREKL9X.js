import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as r,c as i,b as s,a as n,w as o,e as a,d as e}from"./app-FEcl1joV.js";const D={},y=s("h1",{id:"3-nuxt3-路由",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#3-nuxt3-路由"},[s("span",null,"3. Nuxt3 路由")])],-1),u={class:"table-of-contents"},d=e(`<h2 id="31-开始使用路由" tabindex="-1"><a class="header-anchor" href="#31-开始使用路由"><span>3.1 开始使用路由</span></a></h2><p>Nuxt3 配置好了文件系统路由，这意味着 <code>pages/</code> 下的 Vue 组件和页面对应。通过对每个页面使用动态导入，Nuxt3 利用代码拆分为请求的路由提供最少数量的 JavaScript。</p><p>项目默认生成了 <code>app.vue</code>，我们加入一个新的组件用于路由：</p><div class="language-vue" data-ext="vue" data-title="vue"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">header</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#569CD6;">h2</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">导航内容</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">h2</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;/</span><span style="color:#569CD6;">header</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">NuxtPage</span><span style="color:#808080;"> /&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>然后我们添加一个页面 <code>pages/about.vue</code>：</p><div class="language-vue" data-ext="vue" data-title="vue"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">h2</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">关于</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">h2</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">这是关于页</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,6),C={href:"http://localhost:3000/about",target:"_blank",rel:"noopener noreferrer"},g=s("p",null,[a("目录下默认的组件是 "),s("code",null,"index.vue"),a("。")],-1),h={href:"https://router.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},v=s("code",null,"pages/",-1),m=e(`<ul><li><code>pages/</code><ul><li><code>about.vue</code></li><li><code>posts/</code><ul><li><code>[id].vue</code></li></ul></li></ul></li></ul><p>Nuxt3 将自动生成下面的路由信息：</p><div class="language-json" data-ext="json" data-title="json"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#9CDCFE;">  &quot;routes&quot;</span><span style="color:#D4D4D4;">: [</span></span>
<span class="line"><span style="color:#D4D4D4;">    {</span></span>
<span class="line"><span style="color:#9CDCFE;">      &quot;path&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;/about&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">      &quot;component&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;pages/about.vue&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">    {</span></span>
<span class="line"><span style="color:#9CDCFE;">      &quot;path&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;/posts/:id&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">      &quot;component&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;pages/posts/[id].vue&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  ]</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="32-导航" tabindex="-1"><a class="header-anchor" href="#32-导航"><span>3.2 导航</span></a></h2><p><code>&lt;NuxtLink&gt;</code> 组件在它们之间链接页面。它表现为一个 <code>&lt;a&gt;</code> 标签，其中 <code>href</code> 属性设置为页面的路由。并且使用 JavaScript 进行切换 URL，阻止整个页面的刷新，并允许动画过渡。</p><p>例如，修改 <code>app.vue</code> 为下面的代码：</p><div class="language-vue" data-ext="vue" data-title="vue"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">header</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#569CD6;">h2</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">导航内容</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">h2</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#569CD6;">nav</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">ul</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">          &lt;</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;&lt;</span><span style="color:#569CD6;">NuxtLink</span><span style="color:#9CDCFE;"> to</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;/about&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">关于</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">NuxtLink</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">          &lt;</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;&lt;</span><span style="color:#569CD6;">NuxtLink</span><span style="color:#9CDCFE;"> to</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;/posts/1&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">文章 1</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">NuxtLink</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">          &lt;</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;&lt;</span><span style="color:#569CD6;">NuxtLink</span><span style="color:#9CDCFE;"> to</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;/posts/2&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">文章 2</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">NuxtLink</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">        &lt;/</span><span style="color:#569CD6;">ul</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">      &lt;/</span><span style="color:#569CD6;">nav</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;/</span><span style="color:#569CD6;">header</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">NuxtPage</span><span style="color:#808080;"> /&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br></div></div><h2 id="33-读取路由参数" tabindex="-1"><a class="header-anchor" href="#33-读取路由参数"><span>3.3 读取路由参数</span></a></h2><p><code>useRoute()</code> 组合可以在 <code>&lt;script setup&gt;</code> 块或 Vue 组件的 <code>setup()</code> 方法中使用，以访问当前路由细节。</p><div class="language-vue" data-ext="vue" data-title="vue"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">script</span><span style="color:#9CDCFE;"> setup</span><span style="color:#9CDCFE;"> lang</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;ts&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> route</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">useRoute</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 当进入 /posts/1 页面时 route.params.id 为 1</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">route</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">params</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  当前 ID: {{ </span><span style="color:#9CDCFE;">route</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">params</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;"> }}</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="34-子路由" tabindex="-1"><a class="header-anchor" href="#34-子路由"><span>3.4 子路由</span></a></h2><p>路由组件可以嵌套，在父组件 <code>demo.vue</code> 中使用 <code>&lt;NuxtPage /&gt;</code> 标签，然后在同级目录下创建 <code>demo/</code> 目录，其目录下的组件将展现为子组件。</p><h2 id="35-自定义路由" tabindex="-1"><a class="header-anchor" href="#35-自定义路由"><span>3.5 自定义路由</span></a></h2><p>新建 <code>app/router.options.ts</code>，然后进行配置即可。</p><div class="language-typescript" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#C586C0;">type</span><span style="color:#9CDCFE;"> RouteRecordRaw</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> customRoutes</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">RouteRecordRaw</span><span style="color:#D4D4D4;">[] = [</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#9CDCFE;">    path:</span><span style="color:#CE9178;"> &#39;/custom&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    name:</span><span style="color:#CE9178;"> &#39;custom&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#DCDCAA;">    component</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#569CD6;"> import</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;@/pages/test.vue&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#DCDCAA;">  routes</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">_routes</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">RouteRecordRaw</span><span style="color:#D4D4D4;">[]) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> _routes</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">customRoutes</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div>`,15);function x(E,_){const l=t("router-link"),p=t("ExternalLinkIcon");return r(),i("div",null,[y,s("nav",u,[s("ul",null,[s("li",null,[n(l,{to:"#31-开始使用路由"},{default:o(()=>[a("3.1 开始使用路由")]),_:1})]),s("li",null,[n(l,{to:"#32-导航"},{default:o(()=>[a("3.2 导航")]),_:1})]),s("li",null,[n(l,{to:"#33-读取路由参数"},{default:o(()=>[a("3.3 读取路由参数")]),_:1})]),s("li",null,[n(l,{to:"#34-子路由"},{default:o(()=>[a("3.4 子路由")]),_:1})]),s("li",null,[n(l,{to:"#35-自定义路由"},{default:o(()=>[a("3.5 自定义路由")]),_:1})])])]),d,s("p",null,[a("然后打开 "),s("a",C,[a("http://localhost:3000/about"),n(p)]),a(" 可以看到内容。")]),g,s("p",null,[a("Nuxt3 路由基于 "),s("a",h,[a("Vue Router"),n(p)]),a("，根据文件名从 "),v,a(" 目录中创建的每个组件生成路由。文件系统路由规则如下，例如我有这样的文件结构：")]),m])}const f=c(D,[["render",x],["__file","3.route.html.vue"]]),F=JSON.parse('{"path":"/nuxt/nuxt-tutorial/3.route.html","title":"3. Nuxt3 路由","lang":"zh-CN","frontmatter":{"description":"3. Nuxt3 路由 3.1 开始使用路由 Nuxt3 配置好了文件系统路由，这意味着 pages/ 下的 Vue 组件和页面对应。通过对每个页面使用动态导入，Nuxt3 利用代码拆分为请求的路由提供最少数量的 JavaScript。 项目默认生成了 app.vue，我们加入一个新的组件用于路由： 然后我们添加一个页面 pages/about.vue...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/nuxt/nuxt-tutorial/3.route.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"3. Nuxt3 路由"}],["meta",{"property":"og:description","content":"3. Nuxt3 路由 3.1 开始使用路由 Nuxt3 配置好了文件系统路由，这意味着 pages/ 下的 Vue 组件和页面对应。通过对每个页面使用动态导入，Nuxt3 利用代码拆分为请求的路由提供最少数量的 JavaScript。 项目默认生成了 app.vue，我们加入一个新的组件用于路由： 然后我们添加一个页面 pages/about.vue..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-05T08:34:26.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-05T08:34:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3. Nuxt3 路由\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-05T08:34:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"3.1 开始使用路由","slug":"31-开始使用路由","link":"#31-开始使用路由","children":[]},{"level":2,"title":"3.2 导航","slug":"32-导航","link":"#32-导航","children":[]},{"level":2,"title":"3.3 读取路由参数","slug":"33-读取路由参数","link":"#33-读取路由参数","children":[]},{"level":2,"title":"3.4 子路由","slug":"34-子路由","link":"#34-子路由","children":[]},{"level":2,"title":"3.5 自定义路由","slug":"35-自定义路由","link":"#35-自定义路由","children":[]}],"git":{"createdTime":1676037187000,"updatedTime":1714898066000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":1.73,"words":518},"filePathRelative":"nuxt/nuxt-tutorial/3.route.md","localizedDate":"2023年2月10日","autoDesc":true}');export{f as comp,F as data};
