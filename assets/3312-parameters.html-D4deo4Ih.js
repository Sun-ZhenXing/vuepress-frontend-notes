import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,d as p}from"./app-FEcl1joV.js";const e={},l=p(`<h1 id="3312-parameters" tabindex="-1"><a class="header-anchor" href="#3312-parameters"><span>3312. Parameters</span></a></h1><p>&lt;题目描述&gt;</p><p>::: playground#ts 3312. Parameters</p><p>@file index.ts</p><div class="language-typescript" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// ============= Test Cases =============</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#C586C0;"> type</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Equal</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Expect</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;@type-challenges/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#DCDCAA;"> foo</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">arg1</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">arg2</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;">): </span><span style="color:#4EC9B0;">void</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {}</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#DCDCAA;"> bar</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">arg1</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">boolean</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">arg2</span><span style="color:#D4D4D4;">: { </span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;A&#39;</span><span style="color:#D4D4D4;"> }): </span><span style="color:#4EC9B0;">void</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {}</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#DCDCAA;"> baz</span><span style="color:#D4D4D4;"> = (): </span><span style="color:#4EC9B0;">void</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#4EC9B0;"> cases</span><span style="color:#D4D4D4;"> = [</span></span>
<span class="line"><span style="color:#4EC9B0;">  Expect</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Equal</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">MyParameters</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> foo</span><span style="color:#D4D4D4;">&gt;, [</span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;">]&gt;&gt;,</span></span>
<span class="line"><span style="color:#4EC9B0;">  Expect</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Equal</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">MyParameters</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> bar</span><span style="color:#D4D4D4;">&gt;, [</span><span style="color:#4EC9B0;">boolean</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;A&#39;</span><span style="color:#D4D4D4;"> }]&gt;&gt;,</span></span>
<span class="line"><span style="color:#4EC9B0;">  Expect</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Equal</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">MyParameters</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> baz</span><span style="color:#D4D4D4;">&gt;, []&gt;&gt;,</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// ============= Your Code Here =============</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#4EC9B0;"> MyParameters</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">&gt; = </span><span style="color:#4EC9B0;">any</span></span>
<span class="line"></span></code></pre></div><p>:::</p><details class="hint-container details"><summary>点击查看答案</summary><div class="language-typescript" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#4EC9B0;"> MyParameters</span><span style="color:#D4D4D4;">&lt;</span></span>
<span class="line"><span style="color:#4EC9B0;">  T</span><span style="color:#569CD6;"> extends</span><span style="color:#D4D4D4;"> (...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">[]) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#4EC9B0;"> any</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt; = </span><span style="color:#4EC9B0;">T</span><span style="color:#569CD6;"> extends</span></span>
<span class="line"><span style="color:#D4D4D4;">  (...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">infer</span><span style="color:#4EC9B0;"> U</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#4EC9B0;"> any</span><span style="color:#D4D4D4;"> ? </span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;"> : </span><span style="color:#4EC9B0;">never</span></span>
<span class="line"></span></code></pre></div></details>`,7),o=[l];function t(r,c){return a(),n("div",null,o)}const i=s(e,[["render",t],["__file","3312-parameters.html.vue"]]),C=JSON.parse('{"path":"/notebook/typescript/type-challenges/3312-parameters.html","title":"3312. Parameters","lang":"zh-CN","frontmatter":{"description":"3312. Parameters <题目描述> ::: playground#ts 3312. Parameters @file index.ts ::: 点击查看答案","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/notebook/typescript/type-challenges/3312-parameters.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"3312. Parameters"}],["meta",{"property":"og:description","content":"3312. Parameters <题目描述> ::: playground#ts 3312. Parameters @file index.ts ::: 点击查看答案"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T11:44:04.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T11:44:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3312. Parameters\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T11:44:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[],"git":{"createdTime":1685192661000,"updatedTime":1714823044000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":0.31,"words":94},"filePathRelative":"notebook/typescript/type-challenges/3312-parameters.md","localizedDate":"2023年5月27日","autoDesc":true}');export{i as comp,C as data};
