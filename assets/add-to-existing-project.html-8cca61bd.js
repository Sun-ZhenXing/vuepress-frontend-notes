import{_ as p,r as o,o as r,c,b as s,a as n,w as l,d as a,e as t}from"./app-122c9ec0.js";const i={},d=s("h1",{id:"将-prisma-添加到现有项目",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#将-prisma-添加到现有项目","aria-hidden":"true"},"#"),a(" 将 Prisma 添加到现有项目")],-1),D={class:"table-of-contents"},h=t(`<h2 id="1-安装依赖" tabindex="-1"><a class="header-anchor" href="#1-安装依赖" aria-hidden="true">#</a> 1. 安装依赖</h2><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">pnpm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">add</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-D</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">prisma</span></span>
<span class="line"></span></code></pre></div><p>现在可以执行 <code>prisma</code> 命令来查看操作：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npx</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">prisma</span></span>
<span class="line"></span></code></pre></div><p>初始化项目：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npx</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">prisma</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">init</span></span>
<span class="line"></span></code></pre></div><p>这将会创建文件 <code>prisma/schema.prisma</code>。</p><p>我们需要准备一个数据库，这里以 MySQL 为例。</p><p>在 <code>.env</code> 文件中，保存了数据库的链接 <code>DATABASE_URL</code>，例如可以修改为 MySQL：</p><div class="language-properties" data-ext="properties"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">DATABASE_URL</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;mysql://root:password@localhost:3306/mydb&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="2-从数据库中逆向生成-prisma-模型" tabindex="-1"><a class="header-anchor" href="#2-从数据库中逆向生成-prisma-模型" aria-hidden="true">#</a> 2. 从数据库中逆向生成 Prisma 模型</h2><p>使用下面的命令，从数据库中逆向生成 Prisma 模型：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npx</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">prisma</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">db</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">pull</span></span>
<span class="line"></span></code></pre></div><p>下面可以对 <code>prisma/schema.prisma</code> 进行一些修改。</p><h2 id="3-生成-prisma-client" tabindex="-1"><a class="header-anchor" href="#3-生成-prisma-client" aria-hidden="true">#</a> 3. 生成 Prisma Client</h2><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">pnpm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">add</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-D</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">@prisma/client</span></span>
<span class="line"><span style="color:#DCDCAA;">npx</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">prisma</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">generate</span></span>
<span class="line"></span></code></pre></div>`,16);function y(u,m){const e=o("router-link");return r(),c("div",null,[d,s("nav",D,[s("ul",null,[s("li",null,[n(e,{to:"#1-安装依赖"},{default:l(()=>[a("1. 安装依赖")]),_:1})]),s("li",null,[n(e,{to:"#2-从数据库中逆向生成-prisma-模型"},{default:l(()=>[a("2. 从数据库中逆向生成 Prisma 模型")]),_:1})]),s("li",null,[n(e,{to:"#3-生成-prisma-client"},{default:l(()=>[a("3. 生成 Prisma Client")]),_:1})])])]),h])}const C=p(i,[["render",y],["__file","add-to-existing-project.html.vue"]]);export{C as default};
