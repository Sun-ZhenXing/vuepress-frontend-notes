import{_ as o,M as c,p,q as i,R as n,N as s,V as t,t as a,a1 as l}from"./framework-546207d5.js";const r={},d=n("h1",{id:"android-开发总结",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#android-开发总结","aria-hidden":"true"},"#"),a(" Android 开发总结")],-1),u={class:"table-of-contents"},h=l(`<h2 id="_1-maven-镜像仓库" tabindex="-1"><a class="header-anchor" href="#_1-maven-镜像仓库" aria-hidden="true">#</a> 1. Maven 镜像仓库</h2><p><code>settings.gradle</code> 内可设置镜像仓库。</p><div class="language-gradle" data-ext="gradle"><pre class="language-gradle"><code><span class="token keyword">repositories</span> <span class="token punctuation">{</span>
    <span class="token function">gradlePluginPortal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">google</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://jitpack.io&#39;</span> <span class="token punctuation">}</span>
    maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/google&#39;</span> <span class="token punctuation">}</span>
    maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/public&#39;</span> <span class="token punctuation">}</span>
    maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/gradle-plugin&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="_2-使用实体-android-机调试开发" tabindex="-1"><a class="header-anchor" href="#_2-使用实体-android-机调试开发" aria-hidden="true">#</a> 2. 使用实体 Android 机调试开发</h2><ol><li>开始 USB 调试</li><li>授权 ADB 调试</li><li>编译到 Android 手机即可执行</li><li>（可选）使用 <code>scrcpy</code> 进行投屏</li></ol><h2 id="附录-a-sync-时错误" tabindex="-1"><a class="header-anchor" href="#附录-a-sync-时错误" aria-hidden="true">#</a> 附录 A：Sync 时错误</h2><p>Sync 时错误：<code>Caused by: org.gradle.api.internal.plugins.PluginApplicationException: Failed to apply</code>。</p><p>解决方法：在项目的 <code>gradle.properties</code> 中加入下面的代码。</p><div class="language-properties" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">android.overridePathCheck</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
</code></pre></div><h2 id="附录-b-调试失败" tabindex="-1"><a class="header-anchor" href="#附录-b-调试失败" aria-hidden="true">#</a> 附录 B：调试失败</h2><p>无法启动 ADB 服务，持续重启 ADB demand。</p><p>解决方法：如果报错 <code>Adb connection Error: 远程主机强迫关闭了一个现有的连接。</code> 就是端口被占用，可能已经启动了另一个 ADB。</p><p>如果出现 <code>&quot;Cannot reach ADB server, attempting to reconnect.&quot;</code>，则表明 WiFi 调试与 ADB 冲突，需要搜索并关闭 <code>Enable adb mDNS for wireless debugging</code>。</p>`,13);function k(g,_){const e=c("router-link");return p(),i("div",null,[d,n("nav",u,[n("ul",null,[n("li",null,[s(e,{to:"#_1-maven-镜像仓库"},{default:t(()=>[a("1. Maven 镜像仓库")]),_:1})]),n("li",null,[s(e,{to:"#_2-使用实体-android-机调试开发"},{default:t(()=>[a("2. 使用实体 Android 机调试开发")]),_:1})]),n("li",null,[s(e,{to:"#附录-a-sync-时错误"},{default:t(()=>[a("附录 A：Sync 时错误")]),_:1})]),n("li",null,[s(e,{to:"#附录-b-调试失败"},{default:t(()=>[a("附录 B：调试失败")]),_:1})])])]),h])}const v=o(r,[["render",k],["__file","android-notes.html.vue"]]);export{v as default};
