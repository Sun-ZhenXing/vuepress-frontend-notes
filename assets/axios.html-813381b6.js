import{_ as l,M as c,p as i,q as u,Q as n,N as a,V as e,t as s,a1 as p}from"./framework-ee54e473.js";const r={},d=n("h1",{id:"axios",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#axios","aria-hidden":"true"},"#"),s(" Axios")],-1),k={class:"table-of-contents"},m={class:"hint-container info"},v=n("p",{class:"hint-container-title"},"官方文档",-1),h={href:"https://axios-http.com/docs/intro",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.axios-http.cn/docs/intro",target:"_blank",rel:"noopener noreferrer"},g=p('<h2 id="_1-axios" tabindex="-1"><a class="header-anchor" href="#_1-axios" aria-hidden="true">#</a> 1. Axios</h2><h3 id="_1-1-axios-简介" tabindex="-1"><a class="header-anchor" href="#_1-1-axios-简介" aria-hidden="true">#</a> 1.1 Axios 简介</h3><p>Axios 是基于 <code>Promise</code> 可以用于浏览器和 Node.js 的网络请求库。</p><ul><li>它是 <strong>isomorphic</strong> 的（即同一套代码可以运行在浏览器和 Node.js 中）</li><li>在服务端它使用原生 Node.js <code>http</code> 模块</li><li>而在客户端（浏览器）则使用 <code>XMLHttpRequests</code></li></ul><h3 id="_1-2-特性" tabindex="-1"><a class="header-anchor" href="#_1-2-特性" aria-hidden="true">#</a> 1.2 特性</h3>',5),b=n("li",null,[s("从浏览器创建 "),n("code",null,"XMLHttpRequests")],-1),f=n("li",null,"从 Node.js 创建 HTTP 请求",-1),x=n("li",null,"支持 Promise API",-1),w=n("li",null,"拦截请求和响应",-1),y=n("li",null,"转换请求和响应数据",-1),j=n("li",null,"取消请求",-1),N=n("li",null,"自动转换 JSON 数据",-1),q={href:"http://en.wikipedia.org/wiki/Cross-site_request_forgery",target:"_blank",rel:"noopener noreferrer"},T=p(`<h3 id="_1-3-安装" tabindex="-1"><a class="header-anchor" href="#_1-3-安装" aria-hidden="true">#</a> 1.3 安装</h3><p>安装依赖：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> axios
bower <span class="token function">install</span> axios
<span class="token function">yarn</span> <span class="token function">add</span> axios
</code></pre></div><p>浏览器端：</p><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- jsDelivr CDN --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- unpkg CDN --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/axios/dist/axios.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>CommonJS：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;axios/dist/browser/axios.cjs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// browser</span>
<span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;axios/dist/node/axios.cjs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// node</span>
</code></pre></div><h2 id="_2-用例" tabindex="-1"><a class="header-anchor" href="#_2-用例" aria-hidden="true">#</a> 2. 用例</h2><h3 id="_2-1-commonjs" tabindex="-1"><a class="header-anchor" href="#_2-1-commonjs" aria-hidden="true">#</a> 2.1 CommonJS</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;axios&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token punctuation">;</span>
</code></pre></div><h3 id="_2-2-浏览器" tabindex="-1"><a class="header-anchor" href="#_2-2-浏览器" aria-hidden="true">#</a> 2.2 浏览器</h3><p>GET 请求示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;axios&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 向给定 ID 的用户发起请求</span>
axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user?ID=12345&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 处理成功情况</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 处理错误情况</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 总是会执行</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述请求也可以按以下方式完成</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token constant">ID</span><span class="token operator">:</span> <span class="token number">12345</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 总是会执行</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>支持 <code>async / await</code> 用法：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user?ID=12345&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>发起一个 POST 请求：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;Fred&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Flintstone&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发起多个并发请求：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getUserAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user/12345&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getUserPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user/12345/permissions&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">getUserAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getUserPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">results</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> acct <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> perm <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-下面学习什么" tabindex="-1"><a class="header-anchor" href="#_3-下面学习什么" aria-hidden="true">#</a> 3. 下面学习什么</h2>`,22),A={href:"https://www.axios-http.cn/docs/api_intro",target:"_blank",rel:"noopener noreferrer"},C=p("<li>Axios API <ul><li>创建新的请求 <ul><li><code>axios(config)</code></li><li><code>axios(url[, config])</code></li></ul></li><li>列举可用的请求方式别名</li></ul></li><li>Axios 实例 <ul><li>使用 <code>axios.create([config])</code> 创建实例</li><li>列举可以用的实例方法</li></ul></li><li>请求配置 <ul><li>列举所有创建请求时可以用的配置选项</li></ul></li><li>响应结构 <ul><li>列举一个请求的响应包含的信息</li><li>列举在 <code>then()</code> 方法中包含的信息</li><li>解释 <code>catch()</code> 方法可以捕获的错误信息</li></ul></li><li>默认配置 <ul><li>如何设置全局 <code>axios</code> 默认值</li><li>如何设置自定义实例默认值</li><li>解释配置的优先级</li></ul></li><li>拦截器 <ul><li>如何在请求或响应被 <code>then()</code> 或 <code>catch()</code> 处理前拦截它们</li><li>如何移除拦截器</li><li>如何给自定义的 <code>axios</code> 实例添加拦截器</li></ul></li><li>错误处理 <ul><li>处理错误的一个示例</li><li>如何使用 <code>validateStatus</code> 选项，自定义抛出错误的 HTTP code</li><li>如何使用 <code>toJSON()</code> 获取更多关于 HTTP 错误的信息</li></ul></li><li>取消请求 <ul><li>如何使用 <code>cancel token</code> 取消一个请求</li><li>如何创建 <code>cancel token</code><ul><li><code>CancelToken.source</code> 工厂方法创建一个 <code>cancel token</code></li><li>传递一个 <code>executor()</code> 函数到 <code>CancelToken</code> 的构造函数</li></ul></li><li>注意：可以使用同一个 <code>cancel token</code> 取消多个请求</li></ul></li><li>请求体编码 <ul><li>默认情况下，将 JavaScript 对象序列化为 <code>JSON</code></li><li>如何以 <code>application/x-www-form-urlencoded</code> 格式发送数据</li><li>在浏览器中 <ul><li>可以使用 <code>URLSearchParams API</code></li><li>或者使用 <code>qs</code> 库编码数据</li></ul></li><li>在 Node.js 中 <ul><li>可以使用 <code>querystring</code> 模块</li><li>也可以使用 <code>qs</code> 库</li><li>可以使用 <code>form-data</code> 库获取 <code>Form data</code></li><li>或者使用一个拦截器</li></ul></li></ul></li>",9),P=n("li",null,[n("strong",null,"[兼容性]"),s(" 破坏性更改将以新的次要版本发布")],-1),S=n("strong",null,"[兼容性]",-1),I=n("code",null,"Promises",-1),D={href:"https://github.com/jakearchibald/es6-promise",target:"_blank",rel:"noopener noreferrer"},E=n("li",null,"包含了 TypeScript 类定义",-1),O={href:"https://github.com/axios/axios/blob/master/CHANGELOG.md",target:"_blank",rel:"noopener noreferrer"},U={href:"https://github.com/axios/axios/blob/master/UPGRADE_GUIDE.md",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/axios/axios/blob/master/ECOSYSTEM.md",target:"_blank",rel:"noopener noreferrer"},G={href:"https://github.com/axios/axios/blob/master/CONTRIBUTING.md",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/axios/axios/blob/master/CODE_OF_CONDUCT.md",target:"_blank",rel:"noopener noreferrer"},L=n("li",null,"鸣谢",-1),R=n("li",null,"开源协议 MIT",-1);function F(M,V){const o=c("router-link"),t=c("ExternalLinkIcon");return i(),u("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[a(o,{to:"#_1-axios"},{default:e(()=>[s("1. Axios")]),_:1}),n("ul",null,[n("li",null,[a(o,{to:"#_1-1-axios-简介"},{default:e(()=>[s("1.1 Axios 简介")]),_:1})]),n("li",null,[a(o,{to:"#_1-2-特性"},{default:e(()=>[s("1.2 特性")]),_:1})]),n("li",null,[a(o,{to:"#_1-3-安装"},{default:e(()=>[s("1.3 安装")]),_:1})])])]),n("li",null,[a(o,{to:"#_2-用例"},{default:e(()=>[s("2. 用例")]),_:1}),n("ul",null,[n("li",null,[a(o,{to:"#_2-1-commonjs"},{default:e(()=>[s("2.1 CommonJS")]),_:1})]),n("li",null,[a(o,{to:"#_2-2-浏览器"},{default:e(()=>[s("2.2 浏览器")]),_:1})])])]),n("li",null,[a(o,{to:"#_3-下面学习什么"},{default:e(()=>[s("3. 下面学习什么")]),_:1})])])]),n("div",m,[v,n("ul",null,[n("li",null,[n("a",h,[s("官方文档"),a(t)])]),n("li",null,[n("a",_,[s("官方中文文档"),a(t)])])])]),g,n("ul",null,[b,f,x,w,y,j,N,n("li",null,[s("客户端支持防御 "),n("a",q,[s("XSRF"),a(t)])])]),T,n("p",null,[n("a",A,[s("API 参考手册"),a(t)]),s(" 的文档结构和讲解的内容，可用于参考和学习。")]),n("ol",null,[C,n("li",null,[s("注意事项 "),n("ul",null,[P,n("li",null,[S,s(),I,s(" 不受支持的 "),n("a",D,[s("polyfill 方案"),a(t)])]),E,n("li",null,[s("资源 "),n("ul",null,[n("li",null,[n("a",O,[s("变更日志"),a(t)])]),n("li",null,[n("a",U,[s("升级指南"),a(t)])]),n("li",null,[n("a",J,[s("生态系统"),a(t)])]),n("li",null,[n("a",G,[s("贡献指南"),a(t)])]),n("li",null,[n("a",H,[s("行为准则"),a(t)])])])]),L,R])])])])}const X=l(r,[["render",F],["__file","axios.html.vue"]]);export{X as default};
