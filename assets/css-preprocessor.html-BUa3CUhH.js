import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as c,c as l,b as e,e as t,a as o,w as i,d as p}from"./app-BdnEjZx0.js";const S={},h=p('<h1 id="css-预处理器" tabindex="-1"><a class="header-anchor" href="#css-预处理器"><span>CSS 预处理器</span></a></h1><p>CSS 预处理器是一个能让你通过预处理器自己独有的语法来生成 CSS 的程序。有很多 CSS 预处理器可供选择，且绝大多数 CSS 预处理器会增加一些原生 CSS 不具备的特性，例如代码混合，嵌套选择器，继承选择器等。这些特性让 CSS 的结构更加具有可读性且易于维护。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><p>而多数 CSS 预处理器提供的语言是 CSS 的超集，因而能表达更高级的特征。浏览器并不能识别这些语言，因而这些预处理器工作方式类似，就是将源代码编译为 CSS 代码。</p><p>现在有各种 CSS 预处理器可供选择，如：</p>',4),_={href:"https://sass-lang.com/",target:"_blank",rel:"noopener noreferrer"},d={href:"http://lesscss.org/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://stylus-lang.com/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://postcss.org/",target:"_blank",rel:"noopener noreferrer"},f={href:"http://turbinecss.github.io/",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,"有一些 CSS 预处理器可用于服务端，例如 Turbine 可在 PHP 端预处理 CSS，而常规的 CSS 预处理器则是在客户端或者在前端项目中使用，例如 Sass 或 Less。",-1),g={class:"hint-container info"},b=e("p",{class:"hint-container-title"},"接下来阅读……",-1),k=e("p",null,"本仓库包含的 CSS 预处理器相关笔记：",-1),y=e("hr",{class:"footnotes-sep"},null,-1),x={class:"footnotes"},N={class:"footnotes-list"},v={id:"footnote1",class:"footnote-item"},T={href:"https://developer.mozilla.org/zh-CN/docs/Glossary/CSS_preprocessor",target:"_blank",rel:"noopener noreferrer"},z=e("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1);function L(P,V){const s=r("ExternalLinkIcon"),n=r("RouteLink");return c(),l("div",null,[h,e("ul",null,[e("li",null,[e("a",_,[t("Sass (SCSS)"),o(s)])]),e("li",null,[e("a",d,[t("Less"),o(s)])]),e("li",null,[e("a",C,[t("Stylus"),o(s)])]),e("li",null,[e("a",m,[t("PostCSS"),o(s)])]),e("li",null,[e("a",f,[t("Turbine"),o(s)])])]),u,e("div",g,[b,k,e("ul",null,[e("li",null,[o(n,{to:"/notebook/css/sass/"},{default:i(()=>[t("Sass 笔记")]),_:1})])])]),y,e("section",x,[e("ol",N,[e("li",v,[e("p",null,[t("CSS 预处理器，MDN，"),e("a",T,[t("https://developer.mozilla.org/zh-CN/docs/Glossary/CSS_preprocessor"),o(s)]),t(),z])])])])])}const B=a(S,[["render",L],["__file","css-preprocessor.html.vue"]]),D=JSON.parse('{"path":"/notebook/css/css-preprocessor.html","title":"CSS 预处理器","lang":"zh-CN","frontmatter":{"description":"CSS 预处理器 CSS 预处理器是一个能让你通过预处理器自己独有的语法来生成 CSS 的程序。有很多 CSS 预处理器可供选择，且绝大多数 CSS 预处理器会增加一些原生 CSS 不具备的特性，例如代码混合，嵌套选择器，继承选择器等。这些特性让 CSS 的结构更加具有可读性且易于维护。[1] 而多数 CSS 预处理器提供的语言是 CSS 的超集，因而...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/notebook/css/css-preprocessor.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"CSS 预处理器"}],["meta",{"property":"og:description","content":"CSS 预处理器 CSS 预处理器是一个能让你通过预处理器自己独有的语法来生成 CSS 的程序。有很多 CSS 预处理器可供选择，且绝大多数 CSS 预处理器会增加一些原生 CSS 不具备的特性，例如代码混合，嵌套选择器，继承选择器等。这些特性让 CSS 的结构更加具有可读性且易于维护。[1] 而多数 CSS 预处理器提供的语言是 CSS 的超集，因而..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T11:44:04.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T11:44:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS 预处理器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T11:44:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[],"git":{"createdTime":1677399344000,"updatedTime":1714823044000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":1,"words":301},"filePathRelative":"notebook/css/css-preprocessor.md","localizedDate":"2023年2月26日","autoDesc":true}');export{B as comp,D as data};
