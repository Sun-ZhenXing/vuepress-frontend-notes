import{_ as r,r as e,o as i,c as d,d as s,b as a,w as o,e as n,f as c}from"./app-90f2a8e3.js";const D={},y=s("h1",{id:"docker-部署前端项目",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#docker-部署前端项目","aria-hidden":"true"},"#"),n(" Docker 部署前端项目")],-1),u={class:"table-of-contents"},m=c(`<h2 id="_1-nginx-快速演示" tabindex="-1"><a class="header-anchor" href="#_1-nginx-快速演示" aria-hidden="true">#</a> 1. Nginx 快速演示</h2><p>为了快速演示，我们可以使用 Docker 快速部署一个前端项目。假设我们的项目构建输出在 <code>/dist/</code> 目录下。</p><p>我们需要在项目添加一个 <code>Dockerfile</code> 文件，内容如下：</p><div class="language-docker" data-ext="docker"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">FROM</span><span style="color:#D4D4D4;"> nginx:1.24.0-alpine3.17-slim</span></span>
<span class="line"><span style="color:#569CD6;">COPY</span><span style="color:#D4D4D4;"> $PWD/dist/ /usr/share/nginx/html/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">EXPOSE</span><span style="color:#D4D4D4;"> 80</span></span>
<span class="line"><span style="color:#569CD6;">CMD</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&quot;nginx&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;-g&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;daemon off;&quot;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"></span></code></pre></div><p>使用下面的命令构建：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">docker</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">build</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-t</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">my_test</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">.</span></span>
<span class="line"></span></code></pre></div><p>构建成功后运行容器：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">docker</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">run</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-itd</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-p</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">80</span><span style="color:#CE9178;">:80</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">my_test</span></span>
<span class="line"></span></code></pre></div>`,8),v={href:"http://localhost/",target:"_blank",rel:"noopener noreferrer"},h=c(`<h2 id="_2-编译并部署" tabindex="-1"><a class="header-anchor" href="#_2-编译并部署" aria-hidden="true">#</a> 2. 编译并部署</h2><p>在同一个 <code>Dockerfile</code> 文件中，我们可以使用两个镜像来完成编译和部署。</p><p>如果项目的根目录不是 <code>/</code>，我们可以将 <code>index.html</code> 文件的内容设置为：</p><div class="language-html" data-ext="html"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">location</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">href</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;/docs/&#39;</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>这样我们就会默认被定向到 <code>/docs/</code> 目录下，也可以使用 <code>nginx.conf</code> 文件来配置。</p><p>下面，我们构建一个基于 VuePress 的文档项目，默认页面是 <code>/vuepress-frontend-notes/</code>（即你现在正在看到的项目），使用 <code>pnpm</code> 编译。</p><div class="language-docker line-numbers-mode" data-ext="docker"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;"># Builder</span></span>
<span class="line"><span style="color:#569CD6;">FROM</span><span style="color:#D4D4D4;"> node:18.17.0-bullseye-slim </span><span style="color:#569CD6;">as</span><span style="color:#D4D4D4;"> builder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">WORKDIR</span><span style="color:#D4D4D4;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">COPY</span><span style="color:#D4D4D4;"> . ./</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">ENV</span><span style="color:#D4D4D4;"> NODE_OPTIONS=--max-old-space-size=4096</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">RUN</span><span style="color:#D4D4D4;"> npm -v \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    &amp;&amp; npm config set registry https://registry.npmmirror.com/ \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    &amp;&amp; npm install -g pnpm \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    &amp;&amp; pnpm -v \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    &amp;&amp; pnpm config set registry https://registry.npmmirror.com/ \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    &amp;&amp; pnpm install \\</span></span>
<span class="line"><span style="color:#D4D4D4;">    &amp;&amp; pnpm build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># Nginx Server</span></span>
<span class="line"><span style="color:#569CD6;">FROM</span><span style="color:#D4D4D4;"> nginx:nginx:1.25.2-alpine3.18-slim</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">WORKDIR</span><span style="color:#D4D4D4;"> /usr/share/nginx/html/vuepress-frontend-notes/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">COPY</span><span style="color:#D4D4D4;"> --from=builder /app/docs/.vuepress/dist/ ./</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">RUN</span><span style="color:#D4D4D4;"> echo </span><span style="color:#CE9178;">&quot;&lt;script&gt;window.location.href = &#39;/vuepress-frontend-notes/&#39;&lt;/script&gt;&quot;</span><span style="color:#D4D4D4;"> &gt; /usr/share/nginx/html/index.html</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">EXPOSE</span><span style="color:#D4D4D4;"> 80</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">CMD</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&quot;nginx&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;-g&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;daemon off;&quot;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以克隆本项目，即上放的 GitHub 地址，本项目提供了上述 <code>Dockerfile</code> 文件，你可以构建镜像：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">docker</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">build</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-t</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">vuepress-frontend-notes</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">.</span></span>
<span class="line"></span></code></pre></div><p>构建成功后运行容器：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">docker</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">run</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-itd</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-p</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">80</span><span style="color:#CE9178;">:80</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">vuepress-frontend-notes</span></span>
<span class="line"></span></code></pre></div>`,11),_={href:"http://localhost/",target:"_blank",rel:"noopener noreferrer"},C={href:"http://localhost/vuepress-frontend-notes/",target:"_blank",rel:"noopener noreferrer"},b={class:"hint-container warning"},g=s("p",{class:"hint-container-title"},"溢出堆空间",-1),E=s("p",null,[n("如果你的项目比较大，或者服务器内存不足，可能在构建时出现 "),s("code",null,"FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory"),n(" 错误。")],-1),k=s("p",null,[n("几种解决方法，其中 "),s("code",null,"4096"),n("（4 GB）可改为你需要的空间大小：")],-1),f=s("li",null,[n("在 "),s("code",null,"Dockerfile"),n(" 中添加 "),s("code",null,"ENV NODE_OPTIONS=--max-old-space-size=4096")],-1),x=s("li",null,[n("添加命令 "),s("code",null,"export NODE_OPTIONS=--max_old_space_size=4096")],-1),O={href:"https://www.npmjs.com/package/increase-memory-limit",target:"_blank",rel:"noopener noreferrer"},N=s("code",null,"increase-memory-limit",-1);function A(q,R){const p=e("router-link"),l=e("ExternalLinkIcon"),t=e("Badge");return i(),d("div",null,[y,s("nav",u,[s("ul",null,[s("li",null,[a(p,{to:"#_1-nginx-快速演示"},{default:o(()=>[n("1. Nginx 快速演示")]),_:1})]),s("li",null,[a(p,{to:"#_2-编译并部署"},{default:o(()=>[n("2. 编译并部署")]),_:1})])])]),m,s("p",null,[n("打开 "),s("a",v,[n("http://localhost/"),a(l)]),n(" 即可看到内容。")]),h,s("p",null,[n("打开 "),s("a",_,[n("http://localhost/"),a(l)]),n(" 即可看到被重定向到 "),s("a",C,[n("http://localhost/vuepress-frontend-notes/"),a(l)]),n("，可以找到本页面的内容。")]),s("div",b,[g,E,k,s("ul",null,[f,x,s("li",null,[a(t,{type:"warning"},{default:o(()=>[n("已弃用")]),_:1}),n(" 使用 "),s("a",O,[N,a(l)]),n(" 插件")])])])])}const P=r(D,[["render",A],["__file","docker.html.vue"]]);export{P as default};
