import{T as l}from"./TreeNode-1e583a14.js";import"./font-awesome-4ed993c7.js";import{c as r,M as d,p as i,q as h,Q as e,N as o,V as s,t as n,a1 as _,_ as u}from"./framework-d2b9082c.js";const m=e("h1",{id:"pnpm-介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pnpm-介绍","aria-hidden":"true"},"#"),n(" pnpm 介绍")],-1),f={class:"table-of-contents"},b=e("h2",{id:"_1-pnpm-介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-pnpm-介绍","aria-hidden":"true"},"#"),n(" 1. pnpm 介绍")],-1),g=e("h3",{id:"_1-1-为什么使用-pnpm",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-1-为什么使用-pnpm","aria-hidden":"true"},"#"),n(" 1.1 为什么使用 pnpm")],-1),k=e("p",null,[e("code",null,"pnpm"),n("（perfomance npm）源于对性能和更少空间的需求。")],-1),x=e("p",null,"简单介绍：",-1),v=e("li",null,[e("code",null,"pnpm"),n(" 是一个包管理器，类似于 "),e("code",null,"npm"),n(" 和 "),e("code",null,"yarn"),n("。")],-1),j=e("code",null,"pnpm",-1),w={href:"https://zhuanlan.zhihu.com/p/412419619",target:"_blank",rel:"noopener noreferrer"},z=e("li",null,[e("code",null,"pnpm"),n(" 提供了兼容性选项，提供持续集成的可靠支持。")],-1),N=_(`<p><code>pnpm</code> 分三个阶段执行安装：</p><ol><li>依赖解析：仓库中没有的依赖都被识别并获取到仓库。</li><li>目录结构计算：<code>node_modules</code> 目录结构是根据依赖计算出来的。</li><li>链接依赖项：所有以前安装过的依赖项都会直接从仓库中获取并链接到 <code>node_modules</code>。</li></ol><h3 id="_1-2-安装-pnpm" tabindex="-1"><a class="header-anchor" href="#_1-2-安装-pnpm" aria-hidden="true">#</a> 1.2 安装 pnpm</h3><p>安装 <code>pnpm</code>：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> <span class="token function">pnpm</span>
</code></pre></div><p>第一次使用 <code>pnpm</code> 可能需要配置：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> setup
</code></pre></div><p>Linux 可能需要指定 Shell：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable"><span class="token environment constant">SHELL</span></span><span class="token operator">=</span>bash <span class="token function">pnpm</span> setup
<span class="token builtin class-name">source</span> /root/.bashrc
</code></pre></div><h2 id="_2-依赖安装方式" tabindex="-1"><a class="header-anchor" href="#_2-依赖安装方式" aria-hidden="true">#</a> 2. 依赖安装方式</h2><p>由于 <code>pnpm</code> 使用链接安装依赖，所以 <code>node_modules</code> 目录结构与 <code>npm</code> 和 <code>yarn</code> 不同，下面介绍 <code>node_modules</code> 几种不同的安装方式。</p><h3 id="_2-1-嵌套安装" tabindex="-1"><a class="header-anchor" href="#_2-1-嵌套安装" aria-hidden="true">#</a> 2.1 嵌套安装</h3><p>在 <code>npm@3</code> 之前，<code>node_modules</code> 结构是干净、可预测的，因为 <code>node_modules</code> 中的每个依赖项都有自己的 <code>node_modules</code> 文件夹，在 <code>package.json</code> 中指定了所有依赖项。例如下面所示，项目依赖了 <code>foo</code>，<code>foo</code> 又依赖了 <code>bar</code>，依赖关系如下图所示。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p>`,13),L=e("h3",{id:"_2-2-扁平安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-2-扁平安装","aria-hidden":"true"},"#"),n(" 2.2 扁平安装")],-1),V=e("hr",{class:"footnotes-sep"},null,-1),E={class:"footnotes"},S={class:"footnotes-list"},B={id:"footnote1",class:"footnote-item"},C=e("code",null,"pnpm",-1),T={href:"https://zhuanlan.zhihu.com/p/457698236",target:"_blank",rel:"noopener noreferrer"},y=e("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1),I=r({__name:"get-started.html",setup(q){const c=[{name:"node_modules",show:!0,children:[{name:"foo",show:!0,children:[{name:"index.js"},{name:"package.json"},{name:"node_modules",show:!0,children:[{name:"bar",show:!0,children:[{name:"index.js"},{name:"package.json"}]}]}]}]}],p=[{name:"node_modules",show:!0,children:[{name:"foo",show:!0,children:[{name:"index.js"},{name:"package.json"}]},{name:"bar",show:!0,children:[{name:"index.js"},{name:"package.json"}]}]}];return(H,M)=>{const a=d("router-link"),t=d("ExternalLinkIcon");return i(),h("div",null,[m,e("nav",f,[e("ul",null,[e("li",null,[o(a,{to:"#_1-pnpm-介绍"},{default:s(()=>[n("1. pnpm 介绍")]),_:1}),e("ul",null,[e("li",null,[o(a,{to:"#_1-1-为什么使用-pnpm"},{default:s(()=>[n("1.1 为什么使用 pnpm")]),_:1})]),e("li",null,[o(a,{to:"#_1-2-安装-pnpm"},{default:s(()=>[n("1.2 安装 pnpm")]),_:1})])])]),e("li",null,[o(a,{to:"#_2-依赖安装方式"},{default:s(()=>[n("2. 依赖安装方式")]),_:1}),e("ul",null,[e("li",null,[o(a,{to:"#_2-1-嵌套安装"},{default:s(()=>[n("2.1 嵌套安装")]),_:1})]),e("li",null,[o(a,{to:"#_2-2-扁平安装"},{default:s(()=>[n("2.2 扁平安装")]),_:1})])])])])]),b,g,k,x,e("ol",null,[v,e("li",null,[j,n(" 极快且节省空间，因为它使用链接安装依赖，而且能避免 "),e("a",w,[n("幽灵依赖问题"),o(t)]),n("。")]),z]),N,o(l,{items:c}),L,o(l,{items:p}),V,e("section",E,[e("ol",S,[e("li",B,[e("p",null,[n("都 2022 年了，"),C,n(" 快到碗里来，知乎，"),e("a",T,[n("https://zhuanlan.zhihu.com/p/457698236"),o(t)]),n(),y])])])])])}}}),F=u(I,[["__file","get-started.html.vue"]]);export{F as default};
