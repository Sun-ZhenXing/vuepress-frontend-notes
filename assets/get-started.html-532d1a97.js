import{T as t}from"./TreeNode-ff65fb82.js";import"./font-awesome-4ed993c7.js";import{g as r,r as c,o as i,c as h,a as _,d as e,b as o,w as a,e as n,f as u,_ as m}from"./app-0c468531.js";const f=e("h1",{id:"pnpm-介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pnpm-介绍","aria-hidden":"true"},"#"),n(" pnpm 介绍")],-1),D={class:"table-of-contents"},b=e("h2",{id:"_1-pnpm-介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-pnpm-介绍","aria-hidden":"true"},"#"),n(" 1. pnpm 介绍")],-1),x=e("h3",{id:"_1-1-为什么使用-pnpm",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-1-为什么使用-pnpm","aria-hidden":"true"},"#"),n(" 1.1 为什么使用 pnpm")],-1),y=e("p",null,[e("code",null,"pnpm"),n("（perfomance npm）源于对性能和更少空间的需求。")],-1),k=e("p",null,"简单介绍：",-1),g=e("li",null,[e("code",null,"pnpm"),n(" 是一个包管理器，类似于 "),e("code",null,"npm"),n(" 和 "),e("code",null,"yarn"),n("。")],-1),C=e("code",null,"pnpm",-1),E={href:"https://zhuanlan.zhihu.com/p/412419619",target:"_blank",rel:"noopener noreferrer"},v=e("li",null,[e("code",null,"pnpm"),n(" 提供了兼容性选项，提供持续集成的可靠支持。")],-1),w=u(`<p><code>pnpm</code> 分三个阶段执行安装：</p><ol><li>依赖解析：仓库中没有的依赖都被识别并获取到仓库。</li><li>目录结构计算：<code>node_modules</code> 目录结构是根据依赖计算出来的。</li><li>链接依赖项：所有以前安装过的依赖项都会直接从仓库中获取并链接到 <code>node_modules</code>。</li></ol><h3 id="_1-2-安装-pnpm" tabindex="-1"><a class="header-anchor" href="#_1-2-安装-pnpm" aria-hidden="true">#</a> 1.2 安装 pnpm</h3><p>安装 <code>pnpm</code>：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-g</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">pnpm</span></span>
<span class="line"></span></code></pre></div><p>第一次使用 <code>pnpm</code> 可能需要配置：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">pnpm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">setup</span></span>
<span class="line"></span></code></pre></div><p>Linux 可能需要指定 Shell：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">SHELL</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">bash</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">pnpm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">setup</span></span>
<span class="line"><span style="color:#DCDCAA;">source</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">/root/.bashrc</span></span>
<span class="line"></span></code></pre></div><h2 id="_2-依赖安装方式" tabindex="-1"><a class="header-anchor" href="#_2-依赖安装方式" aria-hidden="true">#</a> 2. 依赖安装方式</h2><p>由于 <code>pnpm</code> 使用链接安装依赖，所以 <code>node_modules</code> 目录结构与 <code>npm</code> 和 <code>yarn</code> 不同，下面介绍 <code>node_modules</code> 几种不同的安装方式。</p><h3 id="_2-1-嵌套安装" tabindex="-1"><a class="header-anchor" href="#_2-1-嵌套安装" aria-hidden="true">#</a> 2.1 嵌套安装</h3><p>在 <code>npm@3</code> 之前，<code>node_modules</code> 结构是干净、可预测的，因为 <code>node_modules</code> 中的每个依赖项都有自己的 <code>node_modules</code> 文件夹，在 <code>package.json</code> 中指定了所有依赖项。例如下面所示，项目依赖了 <code>foo</code>，<code>foo</code> 又依赖了 <code>bar</code>，依赖关系如下图所示。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p>`,13),j=e("h3",{id:"_2-2-扁平安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-2-扁平安装","aria-hidden":"true"},"#"),n(" 2.2 扁平安装")],-1),A=e("hr",{class:"footnotes-sep"},null,-1),z={class:"footnotes"},N={class:"footnotes-list"},L={id:"footnote1",class:"footnote-item"},V=e("code",null,"pnpm",-1),S={href:"https://zhuanlan.zhihu.com/p/457698236",target:"_blank",rel:"noopener noreferrer"},B=e("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1),T=r({__name:"get-started.html",setup(I){const d=[{name:"node_modules",show:!0,children:[{name:"foo",show:!0,children:[{name:"index.js"},{name:"package.json"},{name:"node_modules",show:!0,children:[{name:"bar",show:!0,children:[{name:"index.js"},{name:"package.json"}]}]}]}]}],p=[{name:"node_modules",show:!0,children:[{name:"foo",show:!0,children:[{name:"index.js"},{name:"package.json"}]},{name:"bar",show:!0,children:[{name:"index.js"},{name:"package.json"}]}]}];return(F,H)=>{const s=c("router-link"),l=c("ExternalLinkIcon");return i(),h("div",null,[f,_(" markdownlint-disable MD033 "),e("nav",D,[e("ul",null,[e("li",null,[o(s,{to:"#_1-pnpm-介绍"},{default:a(()=>[n("1. pnpm 介绍")]),_:1}),e("ul",null,[e("li",null,[o(s,{to:"#_1-1-为什么使用-pnpm"},{default:a(()=>[n("1.1 为什么使用 pnpm")]),_:1})]),e("li",null,[o(s,{to:"#_1-2-安装-pnpm"},{default:a(()=>[n("1.2 安装 pnpm")]),_:1})])])]),e("li",null,[o(s,{to:"#_2-依赖安装方式"},{default:a(()=>[n("2. 依赖安装方式")]),_:1}),e("ul",null,[e("li",null,[o(s,{to:"#_2-1-嵌套安装"},{default:a(()=>[n("2.1 嵌套安装")]),_:1})]),e("li",null,[o(s,{to:"#_2-2-扁平安装"},{default:a(()=>[n("2.2 扁平安装")]),_:1})])])])])]),b,x,y,k,e("ol",null,[g,e("li",null,[C,n(" 极快且节省空间，因为它使用链接安装依赖，而且能避免 "),e("a",E,[n("幽灵依赖问题"),o(l)]),n("。")]),v]),w,o(t,{items:d}),j,o(t,{items:p}),A,e("section",z,[e("ol",N,[e("li",L,[e("p",null,[n("都 2022 年了，"),V,n(" 快到碗里来，知乎，"),e("a",S,[n("https://zhuanlan.zhihu.com/p/457698236"),o(l)]),n(),B])])])])])}}}),J=m(T,[["__file","get-started.html.vue"]]);export{J as default};
