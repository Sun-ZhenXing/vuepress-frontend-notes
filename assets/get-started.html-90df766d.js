import{_ as t,r as e,o as i,c as y,b as s,a,w as p,d as n,e as D}from"./app-122c9ec0.js";const d={},C=s("h1",{id:"prisma-入门",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#prisma-入门","aria-hidden":"true"},"#"),n(" Prisma 入门")],-1),v={class:"table-of-contents"},u=s("h2",{id:"1-什么是-prisma",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#1-什么是-prisma","aria-hidden":"true"},"#"),n(" 1. 什么是 Prisma")],-1),m=s("p",null,"Prisma 是一个开源的 ORM 框架，支持各类常见数据库系统，提供了数据模型、自动迁移、类型安全和自动补全支持，拥有活跃的社区和完善的支持。不同于传统的 ORM 框架，Prisma 使用了一些新方法来避免 ORM 的一些固有问题。",-1),h=s("p",null,"Prisma 现在不仅支持关系型数据库，也支持 NoSQL 数据库，如 MongoDB。此外还支持地理数据库 CockroachDB 等。",-1),E=s("p",null,"Prisma 适用于在各种架构中使用，如 REST API、GraphQL API、gRPC API 等。常见全栈应用：",-1),b={href:"https://nextjs.org/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://remix.run/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://kit.svelte.dev/",target:"_blank",rel:"noopener noreferrer"},F={href:"https://nuxt.com/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://redwoodjs.com/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://create.t3.gg/",target:"_blank",rel:"noopener noreferrer"},x=D(`<h2 id="2-开始使用" tabindex="-1"><a class="header-anchor" href="#2-开始使用" aria-hidden="true">#</a> 2. 开始使用</h2><h3 id="21-创建项目" tabindex="-1"><a class="header-anchor" href="#21-创建项目" aria-hidden="true">#</a> 2.1 创建项目</h3><p>下面我们将创建一个 TypeScript 项目和一个本地 SQLite 数据库，从头开始使用 Prisma。它包括数据建模、迁移和查询数据库。</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">mkdir</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">hello-prisma</span></span>
<span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">hello-prisma</span></span>
<span class="line"></span></code></pre></div><p>下面我们将使用 <code>pnpm</code> 来创建和管理项目：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">pnpm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">init</span></span>
<span class="line"><span style="color:#DCDCAA;">pnpm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">add</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-D</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">typescript</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">ts-node</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">@types/node</span></span>
<span class="line"></span></code></pre></div><p>初始化 TypeScript 项目：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npx</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">tsc</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--init</span></span>
<span class="line"></span></code></pre></div><p>添加 Prisma 依赖：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">pnpm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">add</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-D</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">prisma</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">@prisma/client</span></span>
<span class="line"></span></code></pre></div><p>使用 Prisma CLI 初始化项目，数据库为 SQLite：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npx</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">prisma</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">init</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--datasource-provider</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">sqlite</span></span>
<span class="line"></span></code></pre></div>`,12),f=s("code",null,"prisma/schema.prisma",-1),P={href:"https://www.prisma.io/docs/getting-started/setup-prisma/add-to-existing-project",target:"_blank",rel:"noopener noreferrer"},B=D(`<p>在 VS Code 中，我们可用使用插件 <code>Prisma.prisma</code> 获得 Prisma 的语法高亮和自动补全支持。</p><p>下面我们更新 <code>prisma/schema.prisma</code> 文件，定义数据模型：</p><div class="language-prisma line-numbers-mode" data-ext="prisma"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">generator</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">client</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&quot;prisma-client-js&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">datasource</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">db</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&quot;sqlite&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">      = </span><span style="color:#DCDCAA;">env</span><span style="color:#808080;">(</span><span style="color:#CE9178;">&quot;DATABASE_URL&quot;</span><span style="color:#808080;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">model</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">User</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">Int</span><span style="color:#D4D4D4;">     </span><span style="color:#DCDCAA;">@id</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">@default</span><span style="color:#808080;">(</span><span style="color:#DCDCAA;">autoincrement</span><span style="color:#808080;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">email</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">@unique</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">  </span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">?</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">posts</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">Post</span><span style="color:#D4D4D4;">[]</span></span>
<span class="line"><span style="color:#808080;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">model</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Post</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">Int</span><span style="color:#D4D4D4;">     </span><span style="color:#DCDCAA;">@id</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">@default</span><span style="color:#808080;">(</span><span style="color:#DCDCAA;">autoincrement</span><span style="color:#808080;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">     </span><span style="color:#4EC9B0;">String</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">content</span><span style="color:#D4D4D4;">   </span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">?</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">published</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Boolean</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">@default</span><span style="color:#808080;">(</span><span style="color:#569CD6;">false</span><span style="color:#808080;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">author</span><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">User</span><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">@relation</span><span style="color:#808080;">(</span><span style="color:#9CDCFE;">fields</span><span style="color:#D4D4D4;">: [authorId], </span><span style="color:#9CDCFE;">references</span><span style="color:#D4D4D4;">: [id]</span><span style="color:#808080;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">authorId</span><span style="color:#D4D4D4;">  </span><span style="color:#4EC9B0;">Int</span></span>
<span class="line"><span style="color:#808080;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述模型非常直观，表述的模型结构如下：</p>`,4),w=D(`<h3 id="22-数据迁移" tabindex="-1"><a class="header-anchor" href="#22-数据迁移" aria-hidden="true">#</a> 2.2 数据迁移</h3><p>现在你已经有了模型对象，但数据库中还没有对应结构。类似于 Django 的迁移，Prisma 也提供了迁移工具，可以将模型结构映射到数据库中。</p><p>在 <code>.env</code> 文件中，定义了数据库的连接信息：</p><div class="language-properties" data-ext="properties"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">DATABASE_URL</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;file:./dev.db&quot;</span></span>
<span class="line"></span></code></pre></div><p>如果你需要更改，可以在此处修改。</p><p>现在我们可以使用 Prisma CLI 来创建迁移文件：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npx</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">prisma</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">migrate</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">dev</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--name</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">init</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"></span></code></pre></div><p>现在 SQLite 数据库中已经创建了对应的表结构。</p><h3 id="23-查询数据库" tabindex="-1"><a class="header-anchor" href="#23-查询数据库" aria-hidden="true">#</a> 2.3 查询数据库</h3><p>我们验证一下数据库是否可用，创建 <code>script.ts</code> 文件：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">PrismaClient</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@prisma/client&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">prisma</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">PrismaClient</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">user</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">prisma</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">user</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">data:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">name:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Alice&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">email:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;alice@prisma.io&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">users</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">prisma</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">user</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">findMany</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">users</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">prisma</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">$disconnect</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">catch</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">error</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">prisma</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">$disconnect</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">process</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">exit</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>它将创建一个用户，并查询所有用户，我们运行一下：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npx</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">ts-node</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">script.ts</span></span>
<span class="line"></span></code></pre></div><p>输出结果如下，表示我们已经成功连接到数据库：</p><div class="language-typescript" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">[ { </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">email:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;alice@prisma.io&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">name:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Alice&#39;</span><span style="color:#D4D4D4;"> } ]</span></span>
<span class="line"></span></code></pre></div><p>我们再插入一个用户，这时候我们使用关联字段创建一个 <code>Post</code> 对象：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">user</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">prisma</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">user</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">data:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">name:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Bob&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">email:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;bob@prisma.io&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">posts:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">create:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">title:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Hello World&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        },</span></span>
<span class="line"><span style="color:#D4D4D4;">      },</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">users</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">prisma</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">user</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">findMany</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">users</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在输出结果是：</p><div class="language-typescript" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">[</span></span>
<span class="line"><span style="color:#D4D4D4;">  { </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">email:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;alice@prisma.io&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">name:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Alice&#39;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">  { </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">email:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;bob@prisma.io&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">name:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Bob&#39;</span><span style="color:#D4D4D4;"> }</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span>
<span class="line"></span></code></pre></div><p>我们注意到，<code>User</code> 对象中并没有 <code>Post</code> 成员，这是因为默认情况下，Prisma 只在查询的结果对象中返回 <strong>标量</strong> 字段。</p><p>为了同时检索属于一个用户的帖子记录，你可以通过帖子关系字段使用 <code>include</code> 选项：</p><div class="language-typescript" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">usersWithPosts</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">prisma</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">user</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">findMany</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">include:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">posts:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dir</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">usersWithPosts</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">depth:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div></div><p>此时我们已经能正确看到数据库中的关联信息：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">[</span></span>
<span class="line"><span style="color:#D4D4D4;">  { </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">email:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;alice@prisma.io&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">name:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Alice&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">posts:</span><span style="color:#D4D4D4;"> [] },</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">email:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;bob@prisma.io&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">name:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Bob&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">posts:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">      {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">title:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Hello World&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">content:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">published:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">authorId:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">2</span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"><span style="color:#D4D4D4;">    ]</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要管理和可视化数据库中的信息，可用使用 Navicat 等工具。如果没有安装相应工具，Prisma 也提供了 Prism Studio 来支持简易地管理数据库：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npx</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">prisma</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">studio</span></span>
<span class="line"></span></code></pre></div>`,26),S={href:"http://localhost:5555",target:"_blank",rel:"noopener noreferrer"},q={class:"hint-container tip"},L=s("p",{class:"hint-container-title"},"更多信息",-1),I={href:"https://www.prisma.io/docs/getting-started/setup-prisma/start-from-scratch",target:"_blank",rel:"noopener noreferrer"};function R(N,M){const o=e("router-link"),l=e("ExternalLinkIcon"),r=e("Mermaid"),c=e("RouterLink");return i(),y("div",null,[C,s("nav",v,[s("ul",null,[s("li",null,[a(o,{to:"#1-什么是-prisma"},{default:p(()=>[n("1. 什么是 Prisma")]),_:1})]),s("li",null,[a(o,{to:"#2-开始使用"},{default:p(()=>[n("2. 开始使用")]),_:1}),s("ul",null,[s("li",null,[a(o,{to:"#21-创建项目"},{default:p(()=>[n("2.1 创建项目")]),_:1})]),s("li",null,[a(o,{to:"#22-数据迁移"},{default:p(()=>[n("2.2 数据迁移")]),_:1})]),s("li",null,[a(o,{to:"#23-查询数据库"},{default:p(()=>[n("2.3 查询数据库")]),_:1})])])])])]),u,m,h,E,s("ul",null,[s("li",null,[s("a",b,[n("Next.js"),a(l)])]),s("li",null,[s("a",g,[n("Remix"),a(l)])]),s("li",null,[s("a",A,[n("SvelteKit"),a(l)])]),s("li",null,[s("a",F,[n("Nuxt"),a(l)])]),s("li",null,[s("a",_,[n("Redwood"),a(l)])]),s("li",null,[s("a",k,[n("t3 stack — using tRPC"),a(l)])])]),x,s("p",null,[n("现在我们已经创建了 "),f,n(" 文件，它是 Prisma 的数据模型定义文件，我们可以在其中定义数据模型和数据源。如果你希望在已的数据库中逆向创建 Prisma 请参考 "),s("a",P,[n("官方文档：添加到已有项目"),a(l)]),n("。")]),B,a(r,{id:"mermaid-89",code:"eJx9jDEKwzAMRXef4l8gF+hcCqVLlh5AqUUssK1iK1OSu9cxNHTqINB/0n9crkJzoeSAZ+WCbRsGXTFqNVwQqLrvZW0LINkgHuOjp2pF8gxOJPEXZErc8t6mm/50TSwevyd4aTbO1tGkGpky3ssUpQb2p4cWC1ruHrfDtrsPkCE78w=="}),w,s("p",null,[n("现在打开 "),s("a",S,[n("http://localhost:5555"),a(l)]),n("，即可看到数据库中的信息。")]),s("div",q,[L,s("ul",null,[s("li",null,[a(c,{to:"/notebook/library/prisma/cli.html"},{default:p(()=>[n("命令行参考")]),_:1})]),s("li",null,[s("a",I,[n("官方文档：在项目中使用关系数据库或 MongoDB"),a(l)])])])])])}const j=t(d,[["render",R],["__file","get-started.html.vue"]]);export{j as default};
