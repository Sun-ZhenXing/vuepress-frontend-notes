import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as u,c as i,b as n,a as s,w as p,e as a,d as c}from"./app-BdnEjZx0.js";const k={},r=n("h1",{id:"3-nuxt3-路由",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#3-nuxt3-路由"},[n("span",null,"3. Nuxt3 路由")])],-1),d={class:"table-of-contents"},g=c(`<h2 id="31-开始使用路由" tabindex="-1"><a class="header-anchor" href="#31-开始使用路由"><span>3.1 开始使用路由</span></a></h2><p>Nuxt3 配置好了文件系统路由，这意味着 <code>pages/</code> 下的 Vue 组件和页面对应。通过对每个页面使用动态导入，Nuxt3 利用代码拆分为请求的路由提供最少数量的 JavaScript。</p><p>项目默认生成了 <code>app.vue</code>，我们加入一个新的组件用于路由：</p><div class="language-vue" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>导航内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NuxtPage</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>然后我们添加一个页面 <code>pages/about.vue</code>：</p><div class="language-vue" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>关于<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是关于页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,6),v={href:"http://localhost:3000/about",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,[a("目录下默认的组件是 "),n("code",null,"index.vue"),a("。")],-1),h={href:"https://router.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"pages/",-1),x=c(`<ul><li><code>pages/</code><ul><li><code>about.vue</code></li><li><code>posts/</code><ul><li><code>[id].vue</code></li></ul></li></ul></li></ul><p>Nuxt3 将自动生成下面的路由信息：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;routes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/about&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;component&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pages/about.vue&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/posts/:id&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;component&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pages/posts/[id].vue&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="32-导航" tabindex="-1"><a class="header-anchor" href="#32-导航"><span>3.2 导航</span></a></h2><p><code>&lt;NuxtLink&gt;</code> 组件在它们之间链接页面。它表现为一个 <code>&lt;a&gt;</code> 标签，其中 <code>href</code> 属性设置为页面的路由。并且使用 JavaScript 进行切换 URL，阻止整个页面的刷新，并允许动画过渡。</p><p>例如，修改 <code>app.vue</code> 为下面的代码：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>导航内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NuxtLink</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>关于<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NuxtLink</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NuxtLink</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/posts/1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>文章 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NuxtLink</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NuxtLink</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/posts/2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>文章 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NuxtLink</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NuxtPage</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="33-读取路由参数" tabindex="-1"><a class="header-anchor" href="#33-读取路由参数"><span>3.3 读取路由参数</span></a></h2><p><code>useRoute()</code> 组合可以在 <code>&lt;script setup&gt;</code> 块或 Vue 组件的 <code>setup()</code> 方法中使用，以访问当前路由细节。</p><div class="language-vue" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 当进入 /posts/1 页面时 route.params.id 为 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  当前 ID: {{ route.params.id }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="34-子路由" tabindex="-1"><a class="header-anchor" href="#34-子路由"><span>3.4 子路由</span></a></h2><p>路由组件可以嵌套，在父组件 <code>demo.vue</code> 中使用 <code>&lt;NuxtPage /&gt;</code> 标签，然后在同级目录下创建 <code>demo/</code> 目录，其目录下的组件将展现为子组件。</p><h2 id="35-自定义路由" tabindex="-1"><a class="header-anchor" href="#35-自定义路由"><span>3.5 自定义路由</span></a></h2><p>新建 <code>app/router.options.ts</code>，然后进行配置即可。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token keyword">type</span> <span class="token class-name">RouteRecordRaw</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>

<span class="token keyword">const</span> customRoutes<span class="token operator">:</span> RouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    path<span class="token operator">:</span> <span class="token string">&#39;/custom&#39;</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&#39;custom&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/pages/test.vue&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">routes</span><span class="token operator">:</span> <span class="token punctuation">(</span>_routes<span class="token operator">:</span> RouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> _routes<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>customRoutes<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function _(f,q){const t=o("router-link"),e=o("ExternalLinkIcon");return u(),i("div",null,[r,n("nav",d,[n("ul",null,[n("li",null,[s(t,{to:"#31-开始使用路由"},{default:p(()=>[a("3.1 开始使用路由")]),_:1})]),n("li",null,[s(t,{to:"#32-导航"},{default:p(()=>[a("3.2 导航")]),_:1})]),n("li",null,[s(t,{to:"#33-读取路由参数"},{default:p(()=>[a("3.3 读取路由参数")]),_:1})]),n("li",null,[s(t,{to:"#34-子路由"},{default:p(()=>[a("3.4 子路由")]),_:1})]),n("li",null,[s(t,{to:"#35-自定义路由"},{default:p(()=>[a("3.5 自定义路由")]),_:1})])])]),g,n("p",null,[a("然后打开 "),n("a",v,[a("http://localhost:3000/about"),s(e)]),a(" 可以看到内容。")]),m,n("p",null,[a("Nuxt3 路由基于 "),n("a",h,[a("Vue Router"),s(e)]),a("，根据文件名从 "),b,a(" 目录中创建的每个组件生成路由。文件系统路由规则如下，例如我有这样的文件结构：")]),x])}const R=l(k,[["render",_],["__file","index.html.vue"]]),w=JSON.parse('{"path":"/nuxt/nuxt-tutorial/chapter03/","title":"3. Nuxt3 路由","lang":"zh-CN","frontmatter":{"description":"3. Nuxt3 路由 3.1 开始使用路由 Nuxt3 配置好了文件系统路由，这意味着 pages/ 下的 Vue 组件和页面对应。通过对每个页面使用动态导入，Nuxt3 利用代码拆分为请求的路由提供最少数量的 JavaScript。 项目默认生成了 app.vue，我们加入一个新的组件用于路由： 然后我们添加一个页面 pages/about.vue...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/nuxt/nuxt-tutorial/chapter03/"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"3. Nuxt3 路由"}],["meta",{"property":"og:description","content":"3. Nuxt3 路由 3.1 开始使用路由 Nuxt3 配置好了文件系统路由，这意味着 pages/ 下的 Vue 组件和页面对应。通过对每个页面使用动态导入，Nuxt3 利用代码拆分为请求的路由提供最少数量的 JavaScript。 项目默认生成了 app.vue，我们加入一个新的组件用于路由： 然后我们添加一个页面 pages/about.vue..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T11:44:04.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T11:44:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3. Nuxt3 路由\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T11:44:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"3.1 开始使用路由","slug":"31-开始使用路由","link":"#31-开始使用路由","children":[]},{"level":2,"title":"3.2 导航","slug":"32-导航","link":"#32-导航","children":[]},{"level":2,"title":"3.3 读取路由参数","slug":"33-读取路由参数","link":"#33-读取路由参数","children":[]},{"level":2,"title":"3.4 子路由","slug":"34-子路由","link":"#34-子路由","children":[]},{"level":2,"title":"3.5 自定义路由","slug":"35-自定义路由","link":"#35-自定义路由","children":[]}],"git":{"createdTime":1676037187000,"updatedTime":1714823044000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":1.73,"words":518},"filePathRelative":"nuxt/nuxt-tutorial/chapter03/index.md","localizedDate":"2023年2月10日","autoDesc":true}');export{R as comp,w as data};
