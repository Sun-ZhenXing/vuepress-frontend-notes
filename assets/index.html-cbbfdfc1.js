import{_ as c,r as p,o as i,c as D,d as s,b as a,w as l,e as n,f as r}from"./app-83cdb7a6.js";const d={},y=s("h1",{id:"_1-kotlin-教程",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-kotlin-教程","aria-hidden":"true"},"#"),n(" 1. Kotlin 教程")],-1),h={class:"table-of-contents"},u=r('<h2 id="_1-1-kotalin-简介" tabindex="-1"><a class="header-anchor" href="#_1-1-kotalin-简介" aria-hidden="true">#</a> 1.1 Kotalin 简介</h2><p>Kotlin 是一种在 Java 虚拟机上运行的静态类型编程语言，被称之为 Android 世界的 Swift，由 JetBrains 设计开发并开源。</p><p>Kotlin 可以编译成 Java 字节码，也可以编译成 JavaScript，方便在没有 JVM 的设备上运行。</p><p>在 Google I/O 2017 中，Google 宣布 Kotlin 成为 Android 官方开发语言。</p><p>为什么选择 Kotlin？</p><ul><li>简洁: 大大减少样板代码的数量</li><li>安全: 避免空指针异常等整个类的错误</li><li>互操作性: 充分利用 JVM、Android 和浏览器的现有库。</li><li>工具友好: 可用任何 Java IDE 或者使用命令行构建</li></ul>',6),C={class:"hint-container info"},_=s("p",{class:"hint-container-title"},"重要信息",-1),k={href:"https://kotlinlang.org/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://kotlinlang.org/docs/getting-started.html",target:"_blank",rel:"noopener noreferrer"},E={href:"https://book.kotlincn.net/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://play.kotlinlang.org/",target:"_blank",rel:"noopener noreferrer"},f=s("h2",{id:"_1-2-开发环境",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-2-开发环境","aria-hidden":"true"},"#"),n(" 1.2 开发环境")],-1),b={href:"https://www.jetbrains.com/idea/download/index.html",target:"_blank",rel:"noopener noreferrer"},x=r(`<p>创建项目流程：</p><ol><li>创建项目，选择 Java 项目，模板选择 Kotlin (Java) 即可</li><li>任意名称保存创建即可，主意要选择正确的 JDK 版本</li><li>等待 Sync 结束即可运行 Hello World</li></ol><h2 id="_1-3-hello-kotlin" tabindex="-1"><a class="header-anchor" href="#_1-3-hello-kotlin" aria-hidden="true">#</a> 1.3 Hello Kotlin</h2><p>和 Java 不同的是，Kotlin 允许顶级的函数，因此 <code>main()</code> 函数可以这样写：</p><div class="language-kotlin" data-ext="kt"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">package</span><span style="color:#D4D4D4;"> hello                       </span><span style="color:#6A9955;">//  可选的包头</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">fun</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">(args: </span><span style="color:#4EC9B0;">Array</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">&gt;) {     </span><span style="color:#6A9955;">// 包级可见的函数，接受一个字符串数组作为参数</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">println</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Hello World!&quot;</span><span style="color:#D4D4D4;">)         </span><span style="color:#6A9955;">// 分号可以省略</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><p>如果您习惯面向对象，可以这样：</p><div class="language-kotlin" data-ext="kt"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Greeter</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">val</span><span style="color:#D4D4D4;"> name: </span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">fun</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">greet</span><span style="color:#D4D4D4;">() { </span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#DCDCAA;">println</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Hello, </span><span style="color:#9CDCFE;">$name</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#569CD6;">fun</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">(args: </span><span style="color:#4EC9B0;">Array</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">&gt;) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">Greeter</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;World!&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">greet</span><span style="color:#D4D4D4;">()       </span><span style="color:#6A9955;">// 创建一个对象不用 new 关键字</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="_1-4-命令行运行" tabindex="-1"><a class="header-anchor" href="#_1-4-命令行运行" aria-hidden="true">#</a> 1.4 命令行运行</h2><p>在 Linux 上，可以用下面的命令安装 Kotlin 工具：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">curl</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-s</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">https://get.sdkman.io</span><span style="color:#D4D4D4;"> | </span><span style="color:#DCDCAA;">bash</span></span>
<span class="line"><span style="color:#DCDCAA;">sdk</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">kotlin</span></span>
<span class="line"></span></code></pre></div><p>编译应用：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">kotlinc</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">hello.kt</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-include-runtime</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-d</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">hello.jar</span></span>
<span class="line"></span></code></pre></div><p>参数说明：</p><ul><li><code>-d</code>：用来设置编译输出的名称，可以是 <code>.class</code> 或 <code>.jar</code> 文件，也可以是目录</li><li><code>-include-runtime</code>：让 <code>.jar</code> 文件包含 Kotlin 运行库，从而可以直接运行</li></ul><p>如果不包含 Kotlin 运行库，需要运行时在你的 <code>classpath</code> 上。</p><p>或者也可以使用 Kotlin 工具执行：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">kotlin</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-classpath</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">hello.jar</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">HelloKt</span></span>
<span class="line"></span></code></pre></div><h2 id="_1-5-脚本模式" tabindex="-1"><a class="header-anchor" href="#_1-5-脚本模式" aria-hidden="true">#</a> 1.5 脚本模式</h2><p>可以使用交互式解释器来执行：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">bin/kotlinc-jvm</span></span>
<span class="line"></span></code></pre></div><p>也可以作为脚本执行：</p><div class="language-kotlin" data-ext="kt"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">import</span><span style="color:#D4D4D4;"> java.io.File</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">val</span><span style="color:#D4D4D4;"> folders = </span><span style="color:#DCDCAA;">File</span><span style="color:#D4D4D4;">(args[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]).</span><span style="color:#DCDCAA;">listFiles</span><span style="color:#D4D4D4;"> { file -&gt; file.</span><span style="color:#DCDCAA;">isDirectory</span><span style="color:#D4D4D4;">() }</span></span>
<span class="line"><span style="color:#D4D4D4;">folders?.</span><span style="color:#DCDCAA;">forEach</span><span style="color:#D4D4D4;"> { folder -&gt; </span><span style="color:#DCDCAA;">println</span><span style="color:#D4D4D4;">(folder) }</span></span>
<span class="line"></span></code></pre></div><p>注意脚本文件后缀为 <code>.kts</code>，需要使用 <code>-script</code> 参数，执行命令：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">kotlinc</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-script</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">list_folders.kts</span><span style="color:#D4D4D4;"> &lt;</span><span style="color:#CE9178;">path_to_folde</span><span style="color:#D4D4D4;">r&gt;</span></span>
<span class="line"></span></code></pre></div>`,24);function v(m,K){const o=p("router-link"),e=p("ExternalLinkIcon"),t=p("Badge");return i(),D("div",null,[y,s("nav",h,[s("ul",null,[s("li",null,[a(o,{to:"#_1-1-kotalin-简介"},{default:l(()=>[n("1.1 Kotalin 简介")]),_:1})]),s("li",null,[a(o,{to:"#_1-2-开发环境"},{default:l(()=>[n("1.2 开发环境")]),_:1})]),s("li",null,[a(o,{to:"#_1-3-hello-kotlin"},{default:l(()=>[n("1.3 Hello Kotlin")]),_:1})]),s("li",null,[a(o,{to:"#_1-4-命令行运行"},{default:l(()=>[n("1.4 命令行运行")]),_:1})]),s("li",null,[a(o,{to:"#_1-5-脚本模式"},{default:l(()=>[n("1.5 脚本模式")]),_:1})])])]),u,s("div",C,[_,s("ul",null,[s("li",null,[s("a",k,[n("Kotlin 语言官网"),a(e)])]),s("li",null,[s("a",g,[n("Kotlin 文档"),a(e)])]),s("li",null,[s("a",E,[n("Kotlin 中文文档"),a(e)]),n(),a(t,{type:"warning"},{default:l(()=>[n("推荐")]),_:1})]),s("li",null,[s("a",A,[n("Kotlin 在线运行工具"),a(e)]),n(),a(t,{type:"warning"},{default:l(()=>[n("推荐")]),_:1})])])]),f,s("p",null,[n("推荐使用 "),s("a",b,[n("IntelliJ IDEA"),a(e)]),n(" 开发 Kotlin 程序，如果您在开发安卓也可以直接使用 Android Studio。")]),x])}const J=c(d,[["render",v],["__file","index.html.vue"]]);export{J as default};
