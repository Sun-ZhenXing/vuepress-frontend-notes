import{_ as c,r as o,o as D,c as r,b as a,a as n,w as e,d as s,e as t}from"./app-rPvAhQef.js";const y={},d=a("h1",{id:"md5",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#md5","aria-hidden":"true"},"#"),s(" MD5")],-1),C={class:"table-of-contents"},i=t(`<h2 id="1-js-md5" tabindex="-1"><a class="header-anchor" href="#1-js-md5" aria-hidden="true">#</a> 1. js-md5</h2><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">js-md5</span></span>
<span class="line"></span></code></pre></div><p>示例代码：</p><div class="language-typescript" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">md5</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;js-md5&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">hash</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">md5</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">hash</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">update</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Message to hash&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">hash</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">hex</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span></code></pre></div><p>支持 HMAC：</p><div class="language-typescript" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">md5</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;js-md5&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// HMAC</span></span>
<span class="line"><span style="color:#9CDCFE;">md5</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">hmac</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;key&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;Message to hash&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">hash</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">md5</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hmac</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;key&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">hash</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">update</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Message to hash&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">hash</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">hex</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span></code></pre></div><p>支持不同的输出格式：</p><div class="language-typescript" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">md5</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;js-md5&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">md5</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// d41d8cd98f00b204e9800998ecf8427e</span></span>
<span class="line"><span style="color:#9CDCFE;">md5</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">hex</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// d41d8cd98f00b204e9800998ecf8427e</span></span>
<span class="line"><span style="color:#9CDCFE;">md5</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">array</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// [212, 29, 140, 217, 143, 0, 178, 4, 233, 128, 9, 152, 236, 248, 66, 126]</span></span>
<span class="line"><span style="color:#9CDCFE;">md5</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">digest</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// [212, 29, 140, 217, 143, 0, 178, 4, 233, 128, 9, 152, 236, 248, 66, 126]</span></span>
<span class="line"><span style="color:#9CDCFE;">md5</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">arrayBuffer</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// ArrayBuffer</span></span>
<span class="line"><span style="color:#9CDCFE;">md5</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">base64</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// 1B2M2Y8AsgTpgAmY7PhCfg==</span></span>
<span class="line"></span></code></pre></div>`,8),h={href:"https://github.com/emn178/js-md5",target:"_blank",rel:"noopener noreferrer"},m={href:"https://emn178.github.io/online-tools/md5.html",target:"_blank",rel:"noopener noreferrer"},E=t(`<h2 id="2-ts-md5" tabindex="-1"><a class="header-anchor" href="#2-ts-md5" aria-hidden="true">#</a> 2. ts-md5</h2><p><code>ts-md5</code> 是 TypeScript 实现的 MD5 算法，支持：</p><ul><li>处理 Unicode 字符串</li><li>支持增量哈希</li><li>处理 <code>File</code> 和 <code>Blob</code></li><li>异步处理，使用 <code>WebWorker</code></li><li>基于 <code>Promise</code> 的请求，将任务提交到 <code>WebWorker</code> 排队处理</li></ul><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">ts-md5</span></span>
<span class="line"></span></code></pre></div><p>示例代码：</p><div class="language-typescript" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Md5</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;ts-md5&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">md5</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">Md5</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 增量哈希</span></span>
<span class="line"><span style="color:#9CDCFE;">md5</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">appendStr</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;somestring&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">   .</span><span style="color:#DCDCAA;">appendAsciiStr</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;a different string&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">   .</span><span style="color:#DCDCAA;">appendByteArray</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">blob</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 生成 MD5 HEX 值</span></span>
<span class="line"><span style="color:#9CDCFE;">md5</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">end</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span></code></pre></div><p>计算文件的 MD5 值：</p><div class="language-typescript" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">ParallelHasher</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;ts-md5&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">hasher</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">ParallelHasher</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;/path/to/ts-md5/dist/md5_worker.js&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">hasher</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">hash</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fileBlob</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;md5 of fileBlob is&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre></div>`,8),A={href:"https://github.com/cotag/ts-md5",target:"_blank",rel:"noopener noreferrer"};function u(g,b){const p=o("router-link"),l=o("ExternalLinkIcon");return D(),r("div",null,[d,a("nav",C,[a("ul",null,[a("li",null,[n(p,{to:"#1-js-md5"},{default:e(()=>[s("1. js-md5")]),_:1})]),a("li",null,[n(p,{to:"#2-ts-md5"},{default:e(()=>[s("2. ts-md5")]),_:1})])])]),i,a("p",null,[s("详情可访问 "),a("a",h,[s("GitHub: emn178/js-md5"),n(l)]),s("，同时作者提供了 "),a("a",m,[s("在线测试"),n(l)]),s(" 地址。")]),E,a("p",null,[s("详情可访问 "),a("a",A,[s("GitHub: cotag/ts-md5"),n(l)]),s("。")])])}const f=c(y,[["render",u],["__file","js-md5.html.vue"]]);export{f as default};
