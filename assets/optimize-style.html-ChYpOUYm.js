import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as r,c as i,b as t,a,w as n,d as c,e as o}from"./app-FEcl1joV.js";const d={},p=t("h1",{id:"android-样式优化",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#android-样式优化"},[t("span",null,"Android 样式优化")])],-1),h={class:"table-of-contents"},u=c(`<h2 id="1-actionbar" tabindex="-1"><a class="header-anchor" href="#1-actionbar"><span>1. ActionBar</span></a></h2><h3 id="11-如何隐藏导航栏" tabindex="-1"><a class="header-anchor" href="#11-如何隐藏导航栏"><span>1.1 如何隐藏导航栏</span></a></h3><p>通过更改继承的主题即可，在 <code>themes.xml</code>，默认情况下为：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">style</span><span style="color:#9CDCFE;"> name</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;Theme.Calc&quot;</span><span style="color:#9CDCFE;"> parent</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;Theme.MaterialComponents.DayNight.DarkActionBar&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    ...</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">style</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>将 <code>DarkActionBar</code> 修改为 <code>NoActionBar</code> 即可。</p><h3 id="12-去除导航栏阴影" tabindex="-1"><a class="header-anchor" href="#12-去除导航栏阴影"><span>1.2 去除导航栏阴影</span></a></h3><p>在 <code>themes.xml</code> 中添加：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">item</span><span style="color:#9CDCFE;"> name</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;android:windowContentOverlay&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">@null</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">item</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>并在对应的 Activity 的 <code>onCreate</code> 函数中添加：</p><div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// remove actionbar shadow</span></span>
<span class="line"><span style="color:#D4D4D4;">supportActionBar?.elevation = </span><span style="color:#B5CEA8;">0.0f</span></span>
<span class="line"></span></code></pre></div><h2 id="2-如何自定义图标" tabindex="-1"><a class="header-anchor" href="#2-如何自定义图标"><span>2. 如何自定义图标</span></a></h2><p>在 <strong>res</strong> 文件夹上右键，<strong>New</strong> -&gt; <strong>Image Asset</strong>，可以设置前景和背景，可以指定一个资源，也可以指定一个矢量图或普通图像然后自动生成一个图标。</p><div class="hint-container warning"><p class="hint-container-title">资源错误</p><p>Android Stdio 会自动将 SVG 转换为资源文件，但启动时可能报错找不到资源，这是因为 Android Studio 没有生成 XML 声明，需要手动加入：</p><div class="language-xml" data-ext="xml" data-title="xml"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;?</span><span style="color:#569CD6;">xml</span><span style="color:#9CDCFE;"> version</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;1.0&quot;</span><span style="color:#9CDCFE;"> encoding</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;utf-8&quot;</span><span style="color:#808080;">?&gt;</span></span>
<span class="line"></span></code></pre></div><p>将上面一行代码粘贴到报错资源的第一行即可。</p></div><h2 id="3-edittext" tabindex="-1"><a class="header-anchor" href="#3-edittext"><span>3. EditText</span></a></h2><h3 id="31-常见属性" tabindex="-1"><a class="header-anchor" href="#31-常见属性"><span>3.1 常见属性</span></a></h3><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td><code>android:background=&quot;@null&quot;</code></td><td>去除下划线</td></tr><tr><td><code>android:cursorVisible=&quot;false&quot;</code></td><td>隐藏光标</td></tr><tr><td><code>android:hint=&quot;@string/search_hint&quot;</code></td><td>设置提示文字</td></tr><tr><td><code>android:inputType=&quot;text&quot;</code></td><td>设置输入类型</td></tr></tbody></table>`,16);function m(y,D){const e=l("router-link");return r(),i("div",null,[p,t("nav",h,[t("ul",null,[t("li",null,[a(e,{to:"#1-actionbar"},{default:n(()=>[o("1. ActionBar")]),_:1}),t("ul",null,[t("li",null,[a(e,{to:"#11-如何隐藏导航栏"},{default:n(()=>[o("1.1 如何隐藏导航栏")]),_:1})]),t("li",null,[a(e,{to:"#12-去除导航栏阴影"},{default:n(()=>[o("1.2 去除导航栏阴影")]),_:1})])])]),t("li",null,[a(e,{to:"#2-如何自定义图标"},{default:n(()=>[o("2. 如何自定义图标")]),_:1})]),t("li",null,[a(e,{to:"#3-edittext"},{default:n(()=>[o("3. EditText")]),_:1}),t("ul",null,[t("li",null,[a(e,{to:"#31-常见属性"},{default:n(()=>[o("3.1 常见属性")]),_:1})])])])])]),u])}const b=s(d,[["render",m],["__file","optimize-style.html.vue"]]),C=JSON.parse('{"path":"/android/basic/optimize-style.html","title":"Android 样式优化","lang":"zh-CN","frontmatter":{"description":"Android 样式优化 1. ActionBar 1.1 如何隐藏导航栏 通过更改继承的主题即可，在 themes.xml，默认情况下为： 将 DarkActionBar 修改为 NoActionBar 即可。 1.2 去除导航栏阴影 在 themes.xml 中添加： 并在对应的 Activity 的 onCreate 函数中添加： 2. 如何自定...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/android/basic/optimize-style.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"Android 样式优化"}],["meta",{"property":"og:description","content":"Android 样式优化 1. ActionBar 1.1 如何隐藏导航栏 通过更改继承的主题即可，在 themes.xml，默认情况下为： 将 DarkActionBar 修改为 NoActionBar 即可。 1.2 去除导航栏阴影 在 themes.xml 中添加： 并在对应的 Activity 的 onCreate 函数中添加： 2. 如何自定..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T11:44:04.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T11:44:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Android 样式优化\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T11:44:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1. ActionBar","slug":"1-actionbar","link":"#1-actionbar","children":[{"level":3,"title":"1.1 如何隐藏导航栏","slug":"11-如何隐藏导航栏","link":"#11-如何隐藏导航栏","children":[]},{"level":3,"title":"1.2 去除导航栏阴影","slug":"12-去除导航栏阴影","link":"#12-去除导航栏阴影","children":[]}]},{"level":2,"title":"2. 如何自定义图标","slug":"2-如何自定义图标","link":"#2-如何自定义图标","children":[]},{"level":2,"title":"3. EditText","slug":"3-edittext","link":"#3-edittext","children":[{"level":3,"title":"3.1 常见属性","slug":"31-常见属性","link":"#31-常见属性","children":[]}]}],"git":{"createdTime":1678090651000,"updatedTime":1714823044000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":0.92,"words":275},"filePathRelative":"android/basic/optimize-style.md","localizedDate":"2023年3月6日","autoDesc":true}');export{b as comp,C as data};
