import{_ as c,r as d,o as t,c as i,b as l,f as o}from"./app-72961842.js";const r={},a=o('<h1 id="原型链" tabindex="-1"><a class="header-anchor" href="#原型链" aria-hidden="true">#</a> 原型链</h1><p>我们知道，对于 JS 创建对象有两种方式：</p><ol><li>过程式创建，就像上面一样，使用 <code>{}</code> 包围键值对来创建</li><li>面向对象编程，使用包含 <code>this</code> 的函数作为类创建器</li></ol><p>对于 ES6+，<code>class</code> 语法糖可以代替上述面向对象的创建方式，这种方式的本质仍然是第二种方式。</p><p>我们先复习一下面向对象编程：</p>',5),s=o("<p>设函数为 <code>f</code>，由此函数 <code>new</code> 所创建的三个对象 <code>a1</code>、<code>a2</code>、<code>a3</code>。</p><ul><li><code>prototype</code> 是每个函数都拥有的属性，这个函数创建对象时将使用这个对象作为原型</li><li><code>__proto__</code> 和 <code>constructor</code> 是 <code>a1</code>、<code>a2</code>、<code>a3</code> 所拥有的属性 <ul><li><code>__proto__</code> 指向对象的原型对象，原型对象通常和被 <code>new</code> 的对象结构一致</li><li><code>constructor</code> 指向构造该对象的函数</li></ul></li><li><code>a1.constructor === f</code></li><li><code>a1.__proto__ === f.prototype</code></li></ul>",2);function n(p,_){const e=d("Mermaid");return t(),i("div",null,[a,l(e,{id:"mermaid-24",code:"eJxLzkksLnbJTEwvSszlUgACx7zM3MQcBZsaXV0F58QSDDGX/HQusCBYJ0yqGiwEFs7PKy4pKk0uyS+Ci+Ul5qbCOYnpCHZqYomGJphXi2Qm0FokA4nQDAK5qfnlWMwCOpcYs5Lzc5Dci2pyUmJRNtxkACUnRoQ="}),s])}const u=c(r,[["render",n],["__file","prototype.html.vue"]]);export{u as default};
