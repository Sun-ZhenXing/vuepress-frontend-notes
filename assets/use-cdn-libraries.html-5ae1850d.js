import{_ as p,r as o,o as t,c,d as s,b as l,w as e,e as n,f as r}from"./app-c99a479b.js";const i={},D=s("h1",{id:"在-vue-项目中引入-cdn-库",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#在-vue-项目中引入-cdn-库","aria-hidden":"true"},"#"),n(" 在 Vue 项目中引入 CDN 库")],-1),d={class:"table-of-contents"},y=r(`<h2 id="_1-全局引入" tabindex="-1"><a class="header-anchor" href="#_1-全局引入" aria-hidden="true">#</a> 1. 全局引入</h2><h3 id="_1-1-webpack" tabindex="-1"><a class="header-anchor" href="#_1-1-webpack" aria-hidden="true">#</a> 1.1 Webpack</h3><p>在 <code>public/index.html</code> 中引入 <code>&lt;script&gt;</code> 标签</p><div class="language-html" data-ext="html"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">body</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;app&quot;</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">script</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">src</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;...&quot;</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">body</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>在 <code>vue.config.js</code> 中配置：</p><div class="language-javascript" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">configureWebpack:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">externals:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#CE9178;">&#39;function-plot&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;functionPlot&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="_1-2-vite" tabindex="-1"><a class="header-anchor" href="#_1-2-vite" aria-hidden="true">#</a> 1.2 Vite</h3><p>安装 <code>vite-plugin-externals</code> 插件：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">pnpm</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">add</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-D</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">vite-plugin-externals</span></span>
<span class="line"></span></code></pre></div><p>在 <code>vite.config.ts</code> 中配置：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">vue</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@vitejs/plugin-vue&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">defineConfig</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;vite&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">viteExternalsPlugin</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;vite-plugin-externals&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// https://vitejs.dev/config/</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">defineConfig</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">plugins:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">vue</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">viteExternalsPlugin</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">externals:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">        {</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">module:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function-plot&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">global:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;functionPlot&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">      ]</span></span>
<span class="line"><span style="color:#D4D4D4;">    })</span></span>
<span class="line"><span style="color:#D4D4D4;">  ]</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你在开发环境中引入了生产环境的库，可能会使得 HMR 失败。</p><p>你也可以使用 <code>disableInServe: true</code> 避免在 Serve 模式中转换。</p><h2 id="_2-在组件中引入" tabindex="-1"><a class="header-anchor" href="#_2-在组件中引入" aria-hidden="true">#</a> 2. 在组件中引入</h2><p>由于 <code>&lt;template&gt;</code> 中不能使用 <code>&lt;script&gt;</code> 标签，所以我们需要使用 <code>&lt;component&gt;</code> 组件来引入。</p><div class="language-vue" data-ext="vue"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#F44747;">component</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">is</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;script&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">src</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;https://unpkg.com/function-plot/dist/function-plot.js&quot;</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#F44747;">component</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,16);function u(C,v){const a=o("router-link");return t(),c("div",null,[D,s("nav",d,[s("ul",null,[s("li",null,[l(a,{to:"#_1-全局引入"},{default:e(()=>[n("1. 全局引入")]),_:1}),s("ul",null,[s("li",null,[l(a,{to:"#_1-1-webpack"},{default:e(()=>[n("1.1 Webpack")]),_:1})]),s("li",null,[l(a,{to:"#_1-2-vite"},{default:e(()=>[n("1.2 Vite")]),_:1})])])]),s("li",null,[l(a,{to:"#_2-在组件中引入"},{default:e(()=>[n("2. 在组件中引入")]),_:1})])])]),y])}const h=p(i,[["render",u],["__file","use-cdn-libraries.html.vue"]]);export{h as default};
