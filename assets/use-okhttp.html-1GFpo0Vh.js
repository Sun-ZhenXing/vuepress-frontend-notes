import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as l,c,b as n,a,w as t,d as i,e as p}from"./app-C-lF8Tfs.js";const u={},k=n("h1",{id:"使用-okhttp-发送请求",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用-okhttp-发送请求"},[n("span",null,"使用 okhttp 发送请求")])],-1),r={class:"table-of-contents"},d=i(`<h2 id="1-添加依赖" tabindex="-1"><a class="header-anchor" href="#1-添加依赖"><span>1. 添加依赖</span></a></h2><p>在 <code>build.gradle</code> 中添加：</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">implementation(&quot;com.squareup.okhttp3</span><span class="token punctuation">:</span><span class="token value attr-value">okhttp:4.10.0&quot;)</span>
</code></pre></div><h2 id="2-基础设置" tabindex="-1"><a class="header-anchor" href="#2-基础设置"><span>2. 基础设置</span></a></h2><div class="language-kotlin line-numbers-mode" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">setTimeoutAndCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> cacheDir <span class="token operator">=</span> externalCacheDir
    <span class="token keyword">val</span> cacheSize <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024L</span>
    <span class="token keyword">val</span> okHttpClientBuilder <span class="token operator">=</span> OkHttpClient<span class="token punctuation">.</span><span class="token function">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">connectTimeout</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">readTimeout</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">writeTimeout</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">cache</span><span class="token punctuation">(</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token function">File</span><span class="token punctuation">(</span>cacheDir<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;cache.txt&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> cacheSize<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> okHttpClient <span class="token operator">=</span> okHttpClientBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="2-发起异步请求" tabindex="-1"><a class="header-anchor" href="#2-发起异步请求"><span>2. 发起异步请求</span></a></h2><h3 id="21-基本-get-请求" tabindex="-1"><a class="header-anchor" href="#21-基本-get-请求"><span>2.1 基本 GET 请求</span></a></h3><div class="language-kotlin line-numbers-mode" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">asyncGet</span><span class="token punctuation">(</span>url<span class="token operator">:</span> String<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> request <span class="token operator">=</span> Request<span class="token punctuation">.</span><span class="token function">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;GET&quot;</span></span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span>    <span class="token comment">// 也可以直接使用 .get() 方法</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token function">OkHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newCall</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token keyword">object</span> <span class="token operator">:</span> Callback <span class="token punctuation">{</span>
        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onFailure</span><span class="token punctuation">(</span>call<span class="token operator">:</span> Call<span class="token punctuation">,</span> e<span class="token operator">:</span> IOException<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// ...</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onResponse</span><span class="token punctuation">(</span>call<span class="token operator">:</span> Call<span class="token punctuation">,</span> response<span class="token operator">:</span> Response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// ...</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="22-post-请求" tabindex="-1"><a class="header-anchor" href="#22-post-请求"><span>2.2 POST 请求</span></a></h3><p>创建请求方法：</p><div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> requestBody <span class="token operator">=</span> FormBody<span class="token punctuation">.</span><span class="token function">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;username&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;alex&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;password&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;pwdstring&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">val</span> request <span class="token operator">=</span> Request<span class="token punctuation">.</span><span class="token function">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>requestBody<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="23-post-发送文件" tabindex="-1"><a class="header-anchor" href="#23-post-发送文件"><span>2.3 POST 发送文件</span></a></h3><div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> filePath <span class="token operator">=</span> Environment<span class="token punctuation">.</span><span class="token function">getExternalStorageDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>absolutePath
<span class="token keyword">val</span> file <span class="token operator">=</span> <span class="token function">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;test.txt&quot;</span></span><span class="token punctuation">)</span>

<span class="token keyword">val</span> request <span class="token operator">=</span> Request<span class="token punctuation">.</span><span class="token function">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">asRequestBody</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;text/txt; charset=utf-8&quot;</span></span><span class="token punctuation">.</span><span class="token function">toMediaType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="24-异步下载一个文件" tabindex="-1"><a class="header-anchor" href="#24-异步下载一个文件"><span>2.4 异步下载一个文件</span></a></h3><div class="language-kotlin line-numbers-mode" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onResponse</span><span class="token punctuation">(</span>call<span class="token operator">:</span> Call<span class="token punctuation">,</span> response<span class="token operator">:</span> Response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> inputStream <span class="token operator">=</span> response<span class="token punctuation">.</span>body<span class="token operator">!!</span><span class="token punctuation">.</span><span class="token function">byteStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> filePath <span class="token operator">=</span> Environment<span class="token punctuation">.</span><span class="token function">getExternalStorageDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>absolutePath
    <span class="token keyword">val</span> file <span class="token operator">=</span> <span class="token function">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;test.txt&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> fileOutputStream <span class="token operator">=</span> <span class="token function">FileOutputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">val</span> buffer <span class="token operator">=</span> <span class="token function">ByteArray</span><span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>
        <span class="token keyword">val</span> len <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span>
        fileOutputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>len<span class="token operator">!</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    fileOutputStream<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="25-异步上传-multipart-文件" tabindex="-1"><a class="header-anchor" href="#25-异步上传-multipart-文件"><span>2.5 异步上传 Multipart 文件</span></a></h3><div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> requestBody <span class="token operator">=</span> MultipartBody<span class="token punctuation">.</span><span class="token function">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span>MultipartBody<span class="token punctuation">.</span>FORM<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addFormDataPart</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;title&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;img&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addFormDataPart</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;image&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;test.png&quot;</span></span><span class="token punctuation">,</span> RequestBody<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>
        <span class="token string-literal singleline"><span class="token string">&quot;image/png&quot;</span></span><span class="token punctuation">.</span><span class="token function">toMediaType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">File</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;/sdcard/test.png&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div>`,17);function v(m,g){const s=o("router-link");return l(),c("div",null,[k,n("nav",r,[n("ul",null,[n("li",null,[a(s,{to:"#1-添加依赖"},{default:t(()=>[p("1. 添加依赖")]),_:1})]),n("li",null,[a(s,{to:"#2-基础设置"},{default:t(()=>[p("2. 基础设置")]),_:1})]),n("li",null,[a(s,{to:"#2-发起异步请求"},{default:t(()=>[p("2. 发起异步请求")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#21-基本-get-请求"},{default:t(()=>[p("2.1 基本 GET 请求")]),_:1})]),n("li",null,[a(s,{to:"#22-post-请求"},{default:t(()=>[p("2.2 POST 请求")]),_:1})]),n("li",null,[a(s,{to:"#23-post-发送文件"},{default:t(()=>[p("2.3 POST 发送文件")]),_:1})]),n("li",null,[a(s,{to:"#24-异步下载一个文件"},{default:t(()=>[p("2.4 异步下载一个文件")]),_:1})]),n("li",null,[a(s,{to:"#25-异步上传-multipart-文件"},{default:t(()=>[p("2.5 异步上传 Multipart 文件")]),_:1})])])])])]),d])}const b=e(u,[["render",v],["__file","use-okhttp.html.vue"]]),y=JSON.parse('{"path":"/android/basic/use-okhttp.html","title":"使用 okhttp 发送请求","lang":"zh-CN","frontmatter":{"description":"使用 okhttp 发送请求 1. 添加依赖 在 build.gradle 中添加： 2. 基础设置 2. 发起异步请求 2.1 基本 GET 请求 2.2 POST 请求 创建请求方法： 2.3 POST 发送文件 2.4 异步下载一个文件 2.5 异步上传 Multipart 文件","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/android/basic/use-okhttp.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"使用 okhttp 发送请求"}],["meta",{"property":"og:description","content":"使用 okhttp 发送请求 1. 添加依赖 在 build.gradle 中添加： 2. 基础设置 2. 发起异步请求 2.1 基本 GET 请求 2.2 POST 请求 创建请求方法： 2.3 POST 发送文件 2.4 异步下载一个文件 2.5 异步上传 Multipart 文件"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T11:44:04.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T11:44:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 okhttp 发送请求\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T11:44:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1. 添加依赖","slug":"1-添加依赖","link":"#1-添加依赖","children":[]},{"level":2,"title":"2. 基础设置","slug":"2-基础设置","link":"#2-基础设置","children":[]},{"level":2,"title":"2. 发起异步请求","slug":"2-发起异步请求","link":"#2-发起异步请求","children":[{"level":3,"title":"2.1 基本 GET 请求","slug":"21-基本-get-请求","link":"#21-基本-get-请求","children":[]},{"level":3,"title":"2.2 POST 请求","slug":"22-post-请求","link":"#22-post-请求","children":[]},{"level":3,"title":"2.3 POST 发送文件","slug":"23-post-发送文件","link":"#23-post-发送文件","children":[]},{"level":3,"title":"2.4 异步下载一个文件","slug":"24-异步下载一个文件","link":"#24-异步下载一个文件","children":[]},{"level":3,"title":"2.5 异步上传 Multipart 文件","slug":"25-异步上传-multipart-文件","link":"#25-异步上传-multipart-文件","children":[]}]}],"git":{"createdTime":1677902387000,"updatedTime":1714823044000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":0.86,"words":259},"filePathRelative":"android/basic/use-okhttp.md","localizedDate":"2023年3月4日","autoDesc":true}');export{b as comp,y as data};
