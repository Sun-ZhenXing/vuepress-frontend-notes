import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as t,c as D,b as s,a as n,w as l,d as r,e as p}from"./app-FEcl1joV.js";const c={},i=s("h1",{id:"使用-okhttp-发送请求",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#使用-okhttp-发送请求"},[s("span",null,"使用 okhttp 发送请求")])],-1),y={class:"table-of-contents"},d=r(`<h2 id="1-添加依赖" tabindex="-1"><a class="header-anchor" href="#1-添加依赖"><span>1. 添加依赖</span></a></h2><p>在 <code>build.gradle</code> 中添加：</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">implementation(</span><span style="color:#CE9178;">&quot;com.squareup.okhttp3:okhttp:4.10.0&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="2-基础设置" tabindex="-1"><a class="header-anchor" href="#2-基础设置"><span>2. 基础设置</span></a></h2><div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">private</span><span style="color:#569CD6;"> fun</span><span style="color:#DCDCAA;"> setTimeoutAndCache</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;">    val</span><span style="color:#D4D4D4;"> cacheDir = externalCacheDir</span></span>
<span class="line"><span style="color:#569CD6;">    val</span><span style="color:#D4D4D4;"> cacheSize = </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;"> * </span><span style="color:#B5CEA8;">1024</span><span style="color:#D4D4D4;"> * </span><span style="color:#B5CEA8;">1024L</span></span>
<span class="line"><span style="color:#569CD6;">    val</span><span style="color:#D4D4D4;"> okHttpClientBuilder = OkHttpClient.</span><span style="color:#DCDCAA;">Builder</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">connectTimeout</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">20</span><span style="color:#D4D4D4;">, TimeUnit.SECONDS)</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">readTimeout</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">20</span><span style="color:#D4D4D4;">, TimeUnit.SECONDS)</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">writeTimeout</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">20</span><span style="color:#D4D4D4;">, TimeUnit.SECONDS)</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">cache</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">Cache</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">File</span><span style="color:#D4D4D4;">(cacheDir, </span><span style="color:#CE9178;">&quot;cache.txt&quot;</span><span style="color:#D4D4D4;">), cacheSize))</span></span>
<span class="line"><span style="color:#569CD6;">    val</span><span style="color:#D4D4D4;"> okHttpClient = okHttpClientBuilder.</span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="2-发起异步请求" tabindex="-1"><a class="header-anchor" href="#2-发起异步请求"><span>2. 发起异步请求</span></a></h2><h3 id="21-基本-get-请求" tabindex="-1"><a class="header-anchor" href="#21-基本-get-请求"><span>2.1 基本 GET 请求</span></a></h3><div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">private</span><span style="color:#569CD6;"> fun</span><span style="color:#DCDCAA;"> asyncGet</span><span style="color:#D4D4D4;">(url: </span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">    val</span><span style="color:#D4D4D4;"> request = Request.</span><span style="color:#DCDCAA;">Builder</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">url</span><span style="color:#D4D4D4;">(url)</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">method</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;GET&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">)    </span><span style="color:#6A9955;">// 也可以直接使用 .get() 方法</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">    OkHttpClient</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">newCall</span><span style="color:#D4D4D4;">(request).</span><span style="color:#DCDCAA;">enqueue</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">object</span><span style="color:#D4D4D4;"> : </span><span style="color:#4EC9B0;">Callback</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">        override</span><span style="color:#569CD6;"> fun</span><span style="color:#DCDCAA;"> onFailure</span><span style="color:#D4D4D4;">(call: </span><span style="color:#4EC9B0;">Call</span><span style="color:#D4D4D4;">, e: </span><span style="color:#4EC9B0;">IOException</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#6A9955;">            // ...</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#569CD6;">        override</span><span style="color:#569CD6;"> fun</span><span style="color:#DCDCAA;"> onResponse</span><span style="color:#D4D4D4;">(call: </span><span style="color:#4EC9B0;">Call</span><span style="color:#D4D4D4;">, response: </span><span style="color:#4EC9B0;">Response</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#6A9955;">            // ...</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">    })</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="22-post-请求" tabindex="-1"><a class="header-anchor" href="#22-post-请求"><span>2.2 POST 请求</span></a></h3><p>创建请求方法：</p><div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">val</span><span style="color:#D4D4D4;"> requestBody = FormBody.</span><span style="color:#DCDCAA;">Builder</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">add</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;username&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;alex&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">add</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;password&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;pwdstring&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">val</span><span style="color:#D4D4D4;"> request = Request.</span><span style="color:#DCDCAA;">Builder</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">url</span><span style="color:#D4D4D4;">(url)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">post</span><span style="color:#D4D4D4;">(requestBody)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span></code></pre></div><h3 id="23-post-发送文件" tabindex="-1"><a class="header-anchor" href="#23-post-发送文件"><span>2.3 POST 发送文件</span></a></h3><div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">val</span><span style="color:#D4D4D4;"> filePath = Environment.</span><span style="color:#DCDCAA;">getExternalStorageDirectory</span><span style="color:#D4D4D4;">().absolutePath</span></span>
<span class="line"><span style="color:#569CD6;">val</span><span style="color:#D4D4D4;"> file = </span><span style="color:#DCDCAA;">File</span><span style="color:#D4D4D4;">(filePath, </span><span style="color:#CE9178;">&quot;test.txt&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">val</span><span style="color:#D4D4D4;"> request = Request.</span><span style="color:#DCDCAA;">Builder</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">url</span><span style="color:#D4D4D4;">(url)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">post</span><span style="color:#D4D4D4;">(file.</span><span style="color:#DCDCAA;">asRequestBody</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;text/txt; charset=utf-8&quot;</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toMediaType</span><span style="color:#D4D4D4;">()))</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span></code></pre></div><h3 id="24-异步下载一个文件" tabindex="-1"><a class="header-anchor" href="#24-异步下载一个文件"><span>2.4 异步下载一个文件</span></a></h3><div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">override</span><span style="color:#569CD6;"> fun</span><span style="color:#DCDCAA;"> onResponse</span><span style="color:#D4D4D4;">(call: </span><span style="color:#4EC9B0;">Call</span><span style="color:#D4D4D4;">, response: </span><span style="color:#4EC9B0;">Response</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">    val</span><span style="color:#D4D4D4;"> inputStream = response.body!!.</span><span style="color:#DCDCAA;">byteStream</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">    val</span><span style="color:#D4D4D4;"> filePath = Environment.</span><span style="color:#DCDCAA;">getExternalStorageDirectory</span><span style="color:#D4D4D4;">().absolutePath</span></span>
<span class="line"><span style="color:#569CD6;">    val</span><span style="color:#D4D4D4;"> file = </span><span style="color:#DCDCAA;">File</span><span style="color:#D4D4D4;">(filePath, </span><span style="color:#CE9178;">&quot;test.txt&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">    val</span><span style="color:#D4D4D4;"> fileOutputStream = </span><span style="color:#DCDCAA;">FileOutputStream</span><span style="color:#D4D4D4;">(file)</span></span>
<span class="line"><span style="color:#569CD6;">    val</span><span style="color:#D4D4D4;"> buffer = </span><span style="color:#DCDCAA;">ByteArray</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">2048</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">    do</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">        val</span><span style="color:#D4D4D4;"> len = inputStream.</span><span style="color:#DCDCAA;">read</span><span style="color:#D4D4D4;">(buffer)</span></span>
<span class="line"><span style="color:#D4D4D4;">        fileOutputStream.</span><span style="color:#DCDCAA;">write</span><span style="color:#D4D4D4;">(buffer, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, len)</span></span>
<span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> (len! = -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    fileOutputStream.</span><span style="color:#DCDCAA;">flush</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="25-异步上传-multipart-文件" tabindex="-1"><a class="header-anchor" href="#25-异步上传-multipart-文件"><span>2.5 异步上传 Multipart 文件</span></a></h3><div class="language-kotlin" data-ext="kt" data-title="kt"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">val</span><span style="color:#D4D4D4;"> requestBody = MultipartBody.</span><span style="color:#DCDCAA;">Builder</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">setType</span><span style="color:#D4D4D4;">(MultipartBody.FORM)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">addFormDataPart</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;title&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;img&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">addFormDataPart</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;image&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;test.png&quot;</span><span style="color:#D4D4D4;">, RequestBody.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#CE9178;">        &quot;image/png&quot;</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toMediaType</span><span style="color:#D4D4D4;">(), </span><span style="color:#DCDCAA;">File</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;/sdcard/test.png&quot;</span><span style="color:#D4D4D4;">)))</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span></code></pre></div>`,17);function C(u,A){const a=e("router-link");return t(),D("div",null,[i,s("nav",y,[s("ul",null,[s("li",null,[n(a,{to:"#1-添加依赖"},{default:l(()=>[p("1. 添加依赖")]),_:1})]),s("li",null,[n(a,{to:"#2-基础设置"},{default:l(()=>[p("2. 基础设置")]),_:1})]),s("li",null,[n(a,{to:"#2-发起异步请求"},{default:l(()=>[p("2. 发起异步请求")]),_:1}),s("ul",null,[s("li",null,[n(a,{to:"#21-基本-get-请求"},{default:l(()=>[p("2.1 基本 GET 请求")]),_:1})]),s("li",null,[n(a,{to:"#22-post-请求"},{default:l(()=>[p("2.2 POST 请求")]),_:1})]),s("li",null,[n(a,{to:"#23-post-发送文件"},{default:l(()=>[p("2.3 POST 发送文件")]),_:1})]),s("li",null,[n(a,{to:"#24-异步下载一个文件"},{default:l(()=>[p("2.4 异步下载一个文件")]),_:1})]),s("li",null,[n(a,{to:"#25-异步上传-multipart-文件"},{default:l(()=>[p("2.5 异步上传 Multipart 文件")]),_:1})])])])])]),d])}const m=o(c,[["render",C],["__file","use-okhttp.html.vue"]]),E=JSON.parse('{"path":"/android/basic/use-okhttp.html","title":"使用 okhttp 发送请求","lang":"zh-CN","frontmatter":{"description":"使用 okhttp 发送请求 1. 添加依赖 在 build.gradle 中添加： 2. 基础设置 2. 发起异步请求 2.1 基本 GET 请求 2.2 POST 请求 创建请求方法： 2.3 POST 发送文件 2.4 异步下载一个文件 2.5 异步上传 Multipart 文件","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/android/basic/use-okhttp.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"使用 okhttp 发送请求"}],["meta",{"property":"og:description","content":"使用 okhttp 发送请求 1. 添加依赖 在 build.gradle 中添加： 2. 基础设置 2. 发起异步请求 2.1 基本 GET 请求 2.2 POST 请求 创建请求方法： 2.3 POST 发送文件 2.4 异步下载一个文件 2.5 异步上传 Multipart 文件"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T11:44:04.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T11:44:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 okhttp 发送请求\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T11:44:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1. 添加依赖","slug":"1-添加依赖","link":"#1-添加依赖","children":[]},{"level":2,"title":"2. 基础设置","slug":"2-基础设置","link":"#2-基础设置","children":[]},{"level":2,"title":"2. 发起异步请求","slug":"2-发起异步请求","link":"#2-发起异步请求","children":[{"level":3,"title":"2.1 基本 GET 请求","slug":"21-基本-get-请求","link":"#21-基本-get-请求","children":[]},{"level":3,"title":"2.2 POST 请求","slug":"22-post-请求","link":"#22-post-请求","children":[]},{"level":3,"title":"2.3 POST 发送文件","slug":"23-post-发送文件","link":"#23-post-发送文件","children":[]},{"level":3,"title":"2.4 异步下载一个文件","slug":"24-异步下载一个文件","link":"#24-异步下载一个文件","children":[]},{"level":3,"title":"2.5 异步上传 Multipart 文件","slug":"25-异步上传-multipart-文件","link":"#25-异步上传-multipart-文件","children":[]}]}],"git":{"createdTime":1677902387000,"updatedTime":1714823044000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":0.86,"words":259},"filePathRelative":"android/basic/use-okhttp.md","localizedDate":"2023年3月4日","autoDesc":true}');export{m as comp,E as data};
