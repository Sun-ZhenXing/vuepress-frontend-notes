import{_ as c,r as t,o as l,c as i,b as n,d as s,a,w as o,e as r}from"./app-e8967aea.js";const u={},d={id:"usecolormode",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#usecolormode","aria-hidden":"true"},"#",-1),v={href:"https://vueuse.org/core/useColorMode/",target:"_blank",rel:"noopener noreferrer"},m={class:"table-of-contents"},h=r(`<h2 id="_1-介绍" tabindex="-1"><a class="header-anchor" href="#_1-介绍" aria-hidden="true">#</a> 1. 介绍</h2><p>响应式设置颜色模式。</p><h2 id="_2-nuxt-示例" tabindex="-1"><a class="header-anchor" href="#_2-nuxt-示例" aria-hidden="true">#</a> 2. Nuxt 示例</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// plugins/darkTheme.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> storeToRefs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>
<span class="token comment">// import type { ConfigProviderTheme } from &#39;vant&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">ConfigProviderTheme</span> <span class="token operator">=</span> <span class="token string">&#39;light&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;dark&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineNuxtPlugin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 响应式获取系统偏好</span>
  <span class="token keyword">const</span> colorMode <span class="token operator">=</span> <span class="token function">useColorMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> appStore <span class="token operator">=</span> <span class="token function">useAppStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// 响应式获取用户偏好设置</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> isDarkTheme<span class="token punctuation">,</span> isUsingSystemDarkMode <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>appStore<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    provide<span class="token operator">:</span> <span class="token punctuation">{</span>
      darkTheme<span class="token operator">:</span> <span class="token generic-function"><span class="token function">computed</span><span class="token generic class-name"><span class="token operator">&lt;</span>ConfigProviderTheme<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isUsingSystemDarkMode<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 如果用户设置了跟随系统，则返回系统偏好</span>
          <span class="token comment">// 如果没有在预设中，则默认为浅色</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;dark&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;light&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>colorMode<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> colorMode<span class="token punctuation">.</span>value <span class="token keyword">as</span> ConfigProviderTheme
          <span class="token keyword">else</span>
            <span class="token keyword">return</span> <span class="token string">&#39;light&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// 否则返回用户设置的偏好</span>
          <span class="token keyword">return</span> isDarkTheme<span class="token punctuation">.</span>value <span class="token operator">?</span> <span class="token string">&#39;dark&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;light&#39;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function b(_,f){const p=t("ExternalLinkIcon"),e=t("router-link");return l(),i("div",null,[n("h1",d,[k,s(),n("a",v,[s("useColorMode"),a(p)])]),n("nav",m,[n("ul",null,[n("li",null,[a(e,{to:"#_1-介绍"},{default:o(()=>[s("1. 介绍")]),_:1})]),n("li",null,[a(e,{to:"#_2-nuxt-示例"},{default:o(()=>[s("2. Nuxt 示例")]),_:1})])])]),h])}const y=c(u,[["render",b],["__file","useColorMode.html.vue"]]);export{y as default};
