import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as r,c,b as s,e as n,a,w as l,d as D}from"./app-FEcl1joV.js";const i={},y={id:"usecolormode",tabindex:"-1"},C={class:"header-anchor",href:"#usecolormode"},d={href:"https://vueuse.org/core/useColorMode/",target:"_blank",rel:"noopener noreferrer"},u={class:"table-of-contents"},m=D(`<h2 id="1-介绍" tabindex="-1"><a class="header-anchor" href="#1-介绍"><span>1. 介绍</span></a></h2><p>响应式设置颜色模式。</p><h2 id="2-nuxt-示例" tabindex="-1"><a class="header-anchor" href="#2-nuxt-示例"><span>2. Nuxt 示例</span></a></h2><div class="language-typescript" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// plugins/darkTheme.ts</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">storeToRefs</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;pinia&#39;</span></span>
<span class="line"><span style="color:#6A9955;">// import type { ConfigProviderTheme } from &#39;vant&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#4EC9B0;"> ConfigProviderTheme</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;light&#39;</span><span style="color:#D4D4D4;"> | </span><span style="color:#CE9178;">&#39;dark&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#DCDCAA;"> defineNuxtPlugin</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">_</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;">  // 响应式获取系统偏好</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> colorMode</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">useColorMode</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> appStore</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">useAppStore</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">  // 响应式获取用户偏好设置</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#D4D4D4;"> { </span><span style="color:#4FC1FF;">isDarkTheme</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">isUsingSystemDarkMode</span><span style="color:#D4D4D4;"> } = </span><span style="color:#DCDCAA;">storeToRefs</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">appStore</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#C586C0;">  return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">    provide:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      darkTheme:</span><span style="color:#DCDCAA;"> computed</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">ConfigProviderTheme</span><span style="color:#D4D4D4;">&gt;(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">isUsingSystemDarkMode</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#6A9955;">          // 如果用户设置了跟随系统，则返回系统偏好</span></span>
<span class="line"><span style="color:#6A9955;">          // 如果没有在预设中，则默认为浅色</span></span>
<span class="line"><span style="color:#C586C0;">          if</span><span style="color:#D4D4D4;"> ([</span><span style="color:#CE9178;">&#39;dark&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;light&#39;</span><span style="color:#D4D4D4;">].</span><span style="color:#DCDCAA;">includes</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">colorMode</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#C586C0;">            return</span><span style="color:#9CDCFE;"> colorMode</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#C586C0;"> as</span><span style="color:#4EC9B0;"> ConfigProviderTheme</span></span>
<span class="line"><span style="color:#C586C0;">          else</span></span>
<span class="line"><span style="color:#C586C0;">            return</span><span style="color:#CE9178;"> &#39;light&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#C586C0;">        else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;">          // 否则返回用户设置的偏好</span></span>
<span class="line"><span style="color:#C586C0;">          return</span><span style="color:#9CDCFE;"> isDarkTheme</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> ? </span><span style="color:#CE9178;">&#39;dark&#39;</span><span style="color:#D4D4D4;"> : </span><span style="color:#CE9178;">&#39;light&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">      }),</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre></div>`,4);function h(g,_){const p=o("ExternalLinkIcon"),e=o("router-link");return r(),c("div",null,[s("h1",y,[s("a",C,[s("span",null,[s("a",d,[n("useColorMode"),a(p)])])])]),s("nav",u,[s("ul",null,[s("li",null,[a(e,{to:"#1-介绍"},{default:l(()=>[n("1. 介绍")]),_:1})]),s("li",null,[a(e,{to:"#2-nuxt-示例"},{default:l(()=>[n("2. Nuxt 示例")]),_:1})])])]),m])}const v=t(i,[["render",h],["__file","useColorMode.html.vue"]]),x=JSON.parse('{"path":"/vue/vueuse/core/useColorMode.html","title":"useColorMode","lang":"zh-CN","frontmatter":{"description":"useColorMode 1. 介绍 响应式设置颜色模式。 2. Nuxt 示例","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/vue/vueuse/core/useColorMode.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"useColorMode"}],["meta",{"property":"og:description","content":"useColorMode 1. 介绍 响应式设置颜色模式。 2. Nuxt 示例"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-04T11:44:04.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-04T11:44:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"useColorMode\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-04T11:44:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1. 介绍","slug":"1-介绍","link":"#1-介绍","children":[]},{"level":2,"title":"2. Nuxt 示例","slug":"2-nuxt-示例","link":"#2-nuxt-示例","children":[]}],"git":{"createdTime":1684307592000,"updatedTime":1714823044000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":0.48,"words":144},"filePathRelative":"vue/vueuse/core/useColorMode.md","localizedDate":"2023年5月17日","autoDesc":true}');export{v as comp,x as data};
